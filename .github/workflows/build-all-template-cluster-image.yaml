name: build-all-template-cluster-image
on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - "scripts/build-cluster-image.sh"
      - ".github/workflows/build-all-template-cluster-image.yaml"
jobs:
  gen-targets:
    runs-on: ubuntu-latest
    outputs:
      targets: ${{ steps.get-targets.outputs.targets }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get all template files
        id: get-targets
        run: |
          files=$(ls -1 template/ | sed "s|^|template/|" | jq -R . | jq -s -c .)
          echo "targets=$files" >> "$GITHUB_OUTPUT"
  build:
    runs-on: ubuntu-latest
    needs: gen-targets
    strategy:
      matrix:
        target: ${{ fromJSON(needs.gen-targets.outputs.targets) }}
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up sealos
        run: |
          curl -sfL https://raw.githubusercontent.com/labring/sealos/main/scripts/install.sh | sh -s v4.3.7 labring/sealos
      - name: Login to ghcr.io
        run: |
          sudo sealos login -u ${{ github.repository_owner }} -p ${{ secrets.GH_PAT }} ghcr.io
      - name: Build cluster image
        run: |
          template_name=$(basename ${{ matrix.target }} .yaml)
          sudo bash scripts/build-cluster-image.sh ${{ matrix.target }} ghcr.io/${{ github.repository_owner }}/sealos-cloud-template-$template_name:latest
      - name: Push and save cluster image
        run: |
          template_name=$(basename ${{ matrix.target }} .yaml)
          sudo sealos push ghcr.io/${{ github.repository_owner }}/sealos-cloud-template-$template_name:latest
          sudo sealos save ghcr.io/${{ github.repository_owner }}/sealos-cloud-template-$template_name:latest -o $template_name.tar
      - name: Upload cluster image tar
        uses: vesoft-inc/upload-oss
        with:
          key-id: ${{ secrets.OSS_ACCESS_KEY_ID }}
          key-secret: ${{ secrets.OSS_ACCESS_KEY_SECRET }}
          endpoint: ${{ secrets.OSS_ENDPOINT }}
          bucket: ${{ secrets.OSS_BUCKET }}
          asset-path: $template_name.tar
          target-path: /cloud/template/$template_name.tar
