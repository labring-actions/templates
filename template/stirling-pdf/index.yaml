apiVersion: app.sealos.io/v1
kind: Template
metadata:
  name: s-pdf
spec:
  title: 'Stirling-PDF'
  url: 'https://github.com/Stirling-Tools/Stirling-PDF'
  gitRepo: 'https://github.com/Stirling-Tools/Stirling-PDF'
  author: 'Sealos'
  description: '1 Locally hosted web application that allows you to perform various operations on PDF files.'
  readme: 'https://raw.githubusercontent.com/Stirling-Tools/Stirling-PDF/main/README.md'
  icon: 'https://avatars.githubusercontent.com/u/139791695?s=48&v=4'
  templateType: inline
  categories:
    - tool
  defaults:
    app_host:
      # number or string..
      type: string
      value: s-pdf-${{ random(8) }}
    app_name:
      type: string
      value: s-pdf-${{ random(8) }}
  inputs:
    use_postgresql:
      description: 'Use PostgreSQL database for production workloads (recommended for better performance and data persistence)'
      type: boolean
      default: 'false'
      required: false
    DOCKER_ENABLE_SECURITY:
      description: "download security jar (required as true for auth login)"
      type: string
      default: "false"
      required: false
    SECURITY_ENABLELOGIN:
      description: "set to 'true' to enable login"
      type: string
      default: "false"
      required: false
    LANGS:
      description: "define custom font libraries to install for use for document conversions"
      type: string
      default: "en-GB,en-US,zh-CN,zh-TW"
      required: false
    INSTALL_BOOK_AND_ADVANCED_HTML_OPS:
      description: "download calibre onto stirling-pdf enabling pdf to/from book and advanced html conversion"
      type: string
      default: "true"
      required: false
    SYSTEM_DEFAULTLOCALE:
      description: "Set the default language"
      type: string
      default: "en-US"
      required: false
    UI_APPNAME:
      description: "Application's visible name"
      type: string
      default: "Stirling-PDF"
      required: false
    UI_HOMEDESCRIPTION:
      description: "Short description or tagline shown on homepage"
      type: string
      default: "Demo site for Stirling-PDF"
      required: false
    UI_APPNAMENAVBAR:
      description: "Name displayed on the navigation bar"
      type: string
      default: "Stirling-PDF"
      required: false
    METRICS_ENABLED:
      description: "enable Info APIs (`/api/*`) endpoints"
      type: string
      default: "true"
      required: false
    SYSTEM_GOOGLEVISIBILITY:
      description: "allow Google visibility (via robots.txt)"
      type: string
      default: "true"
      required: false
---

${{ if(inputs.SYSTEM_DEFAULTLOCALE === 'zh-CN') }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ${{ defaults.app_name }}
data:
  vn-etcvn-apkvn-repositories: |-
    https://mirrors.ustc.edu.cn/alpine/v3.20/main
    https://mirrors.ustc.edu.cn/alpine/v3.20/community
    @testing https://mirrors.ustc.edu.cn/alpine/edge/main
    @testing https://mirrors.ustc.edu.cn/alpine/edge/community
    @testing https://mirrors.ustc.edu.cn/alpine/edge/testing
${{ endif() }}

${{ if(inputs.use_postgresql === 'true') }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    sealos-db-provider-cr: ${{ defaults.app_name }}-pg
    app.kubernetes.io/instance: ${{ defaults.app_name }}-pg
    app.kubernetes.io/managed-by: kbcli
  name: ${{ defaults.app_name }}-pg

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    sealos-db-provider-cr: ${{ defaults.app_name }}-pg
    app.kubernetes.io/instance: ${{ defaults.app_name }}-pg
    app.kubernetes.io/managed-by: kbcli
  name: ${{ defaults.app_name }}-pg
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    sealos-db-provider-cr: ${{ defaults.app_name }}-pg
    app.kubernetes.io/instance: ${{ defaults.app_name }}-pg
    app.kubernetes.io/managed-by: kbcli
  name: ${{ defaults.app_name }}-pg
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ${{ defaults.app_name }}-pg
subjects:
  - kind: ServiceAccount
    name: ${{ defaults.app_name }}-pg

---
apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  finalizers:
    - cluster.kubeblocks.io/finalizer
  labels:
    clusterdefinition.kubeblocks.io/name: postgresql
    clusterversion.kubeblocks.io/name: postgresql-14.8.0
    sealos-db-provider-cr: ${{ defaults.app_name }}-pg
  annotations: {}
  name: ${{ defaults.app_name }}-pg
spec:
  affinity:
    nodeLabels: {}
    podAntiAffinity: Preferred
    tenancy: SharedNode
    topologyKeys: []
  clusterDefinitionRef: postgresql
  clusterVersionRef: postgresql-14.8.0
  componentSpecs:
    - componentDefRef: postgresql
      monitor: true
      name: postgresql
      replicas: 1
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 51Mi
      serviceAccountName: ${{ defaults.app_name }}-pg
      switchPolicy:
        type: Noop
      volumeClaimTemplates:
        - name: data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
  terminationPolicy: Delete
  tolerations: []

---
apiVersion: batch/v1
kind: Job
metadata:
  name: ${{ defaults.app_name }}-pg-init
spec:
  completions: 1
  template:
    spec:
      containers:
        - name: pgsql-init
          image: postgres:14-alpine
          env:
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-pg-conn-credential
                  key: password
            - name: DATABASE_URL
              value: postgresql://postgres:$(PG_PASSWORD)@${{ defaults.app_name }}-pg-postgresql.${{ SEALOS_NAMESPACE }}.svc:5432
          command:
            - /bin/sh
            - -c
            - |
              until psql ${DATABASE_URL} -c 'CREATE DATABASE stirling_pdf;' &>/dev/null; do sleep 1; done
      restartPolicy: Never
  backoffLimit: 0
  ttlSecondsAfterFinished: 300
${{ endif() }}

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ${{ defaults.app_name }}
  annotations:
    originImageName: ghcr.io/stirling-tools/stirling-pdf:1.2.0-fat
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    app: ${{ defaults.app_name }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  minReadySeconds: 10
  serviceName: ${{ defaults.app_name }}
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}
    spec:
      terminationGracePeriodSeconds: 10
      automountServiceAccountToken: false
      initContainers:
        - name: take-data-dir-ownership
          image: alpine
          command: ["/bin/sh", "-c", "chown -R 1000:1000 /tmp"]
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: vn-tmp
              mountPath: /tmp
      containers:
        - name: ${{ defaults.app_name }}
          image: ghcr.io/stirling-tools/stirling-pdf:1.2.0-fat
          env:
            - name: DOCKER_ENABLE_SECURITY
              value: ${{ inputs.DOCKER_ENABLE_SECURITY }}
            - name: SECURITY_ENABLELOGIN
              value: ${{ inputs.SECURITY_ENABLELOGIN }}
            - name: LANGS
              value: ${{ inputs.LANGS }}
            - name: INSTALL_BOOK_AND_ADVANCED_HTML_OPS
              value: ${{ inputs.INSTALL_BOOK_AND_ADVANCED_HTML_OPS }}
            - name: SYSTEM_DEFAULTLOCALE
              value: ${{ inputs.SYSTEM_DEFAULTLOCALE }}
            - name: UI_APPNAME
              value: ${{ inputs.UI_APPNAME }}
            - name: UI_HOMEDESCRIPTION
              value: ${{ inputs.UI_HOMEDESCRIPTION }}
            - name: UI_APPNAMENAVBAR
              value: ${{ inputs.UI_APPNAMENAVBAR }}
            - name: METRICS_ENABLED
              value: ${{ inputs.METRICS_ENABLED }}
            - name: SYSTEM_GOOGLEVISIBILITY
              value: ${{ inputs.SYSTEM_GOOGLEVISIBILITY }}
            ${{ if(inputs.use_postgresql === 'true') }}
            - name: SYSTEM_DATASOURCE_ENABLECUSTOMDATABASE
              value: 'true'
            - name: DB_POSTGRESDB_PORT
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-pg-conn-credential
                  key: port
            - name: DB_POSTGRESDB_USER
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-pg-conn-credential
                  key: username
            - name: DB_POSTGRESDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-pg-conn-credential
                  key: password
            - name: DB_POSTGRESDB_HOST
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-pg-conn-credential
                  key: host
            - name: SYSTEM_DATASOURCE_CUSTOMDATABASEURL
              value: 'jdbc:postgresql://$(DB_POSTGRESDB_USER):$(DB_POSTGRESDB_PASSWORD)@$(DB_POSTGRESDB_HOST):$(DB_POSTGRESDB_PORT)/stirling_pdf'
            ${{ endif() }}
          resources:
            requests:
              cpu: 100m
              memory: 204Mi
              ephemeral-storage: "200Mi"
            limits:
              cpu: 1000m
              memory: 2048Mi
              ephemeral-storage: "200Mi"
          ports:
            - name: http
              protocol: TCP
              containerPort: 8080
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: vn-usrvn-sharevn-tessdata
              mountPath: /usr/share/tessdata
            - name: vn-configs
              mountPath: /configs
            ${{ if(inputs.SYSTEM_DEFAULTLOCALE === 'zh-CN') }}
            - name: vn-etcvn-apkvn-repositories
              mountPath: /etc/apk/repositories
              subPath: ./etc/apk/repositories
            ${{ endif() }}
            - name: vn-customfiles
              mountPath: /customFiles
            - name: vn-pipeline
              mountPath: /pipeline
            - name: vn-tmp
              mountPath: /tmp
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - curl -f http://localhost:8080/api/v1/info/status | grep -q 'UP'
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 10
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - curl -f http://localhost:8080/api/v1/info/status | grep -q 'UP'
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
      ${{ if(inputs.SYSTEM_DEFAULTLOCALE === 'zh-CN') }}
      volumes:
        - name: vn-etcvn-apkvn-repositories
          configMap:
            name: ${{ defaults.app_name }}
            items:
              - key: vn-etcvn-apkvn-repositories
                path: ./etc/apk/repositories
      ${{ endif() }}
  volumeClaimTemplates:
    - metadata:
        annotations:
          path: /usr/share/tessdata
          value: '1'
        name: vn-usrvn-sharevn-tessdata
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    - metadata:
        annotations:
          path: /configs
          value: '1'
        name: vn-configs
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    - metadata:
        annotations:
          path: /customFiles
          value: '1'
        name: vn-customfiles
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    - metadata:
        annotations:
          path: /pipeline
          value: '1'
        name: vn-pipeline
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    - metadata:
        annotations:
          path: /tmp
          value: '1'
        name: vn-tmp
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  ports:
    - port: 8080
  selector:
    app: ${{ defaults.app_name }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    cloud.sealos.io/app-deploy-manager-domain: ${{ defaults.app_host }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: ${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      http:
        paths:
          - pathType: Prefix
            path: /()(.*)
            backend:
              service:
                name: ${{ defaults.app_name }}
                port:
                  number: 8080
  tls:
    - hosts:
        - ${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      secretName: ${{ SEALOS_CERT_SECRET_NAME }}

---
apiVersion: app.sealos.io/v1
kind: App
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  data:
    url: https://${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
  displayType: normal
  icon: "https://avatars.githubusercontent.com/u/139791695?s=48&v=4"
  name: "Stirling-PDF"
  type: link