apiVersion: app.sealos.io/v1
kind: Template
metadata:
  name: ubuntu-sshd
spec:
  title: sshd-web
  url: https://github.com/PandaaKai/sshd-web
  gitRepo: https://github.com/PandaaKai/sshd-web
  author: Sealos
  description: sshd-web
  readme: https://github.com/PandaaKai/sshd-web/blob/main/README.md
  icon: https://zhieasy.oss-cn-hangzhou.aliyuncs.com/zhiyilogo.jpg
  templateType: inline
  defaults:
    app_name:
      type: string
      value: ubuntu-sshd-${{ random(8) }}
    app_host:
      type: string
      value: ${{ random(8) }}
  inputs:
    PORT:
      description: port
      type: string
      default: "8080"
      required: true
    ROOT_PASSWORD:
      description: root password
      type: string
      default: root@sadazxc
      required: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ${{ defaults.app_name }}
data:
  default: |-
    server {
      listen       80;
      server_name  _;
    
      location / {
        proxy_set_header  X-Real-IP  $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
    
        proxy_pass http://localhost:${{ inputs.PORT }};
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{ defaults.app_name }}
  annotations:
    originImageName: registry.cn-hangzhou.aliyuncs.com/pandak/ssh:latest
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    app: ${{ defaults.app_name }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}
    spec:
      containers:
        - name: ${{ defaults.app_name }}
          image: registry.cn-hangzhou.aliyuncs.com/pandak/ssh:latest
          resources:
            requests:
              cpu: 100m
              memory: 102Mi
            limits:
              cpu: 2000m
              memory: 2048Mi
          command: []
          args: []
          env:
            - name: ROOT_PASSWORD
              value: ${{ inputs.ROOT_PASSWORD }}
            - name: WEB_PORT
              value: ${{ inputs.PORT }}
          ports:
            - containerPort: 22
              name: sshd
            - containerPort: 80
              name: web
          imagePullPolicy: Always
          volumeMounts:
            - name: default
              mountPath: /etc/nginx/sites-available
      volumes:
        - name: default
          configMap:
            name: ${{ defaults.app_name }}
---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  type: NodePort
  ports:
    - port: 22
      targetPort: 22
      name: sshd
    - port: 80
      targetPort: 80
      name: web
  selector:
    app: ${{ defaults.app_name }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    cloud.sealos.io/app-deploy-manager-domain: ${{ defaults.app_host }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: ${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: ${{ defaults.app_name }}
                port:
                  number: 80
  tls:
    - hosts:
        - ${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      secretName: ${{ SEALOS_CERT_SECRET_NAME }}