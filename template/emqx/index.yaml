apiVersion: app.sealos.io/v1
kind: Template
metadata:
  name: emqx
spec:
  title: EMQX
  url: 'https://emqx.com/'
  gitRepo: 'https://github.com/emqx/emqx'
  author: 'sealos'
  description: 'The most scalable open-source MQTT broker for IoT, IIoT, and connected vehicles'
  readme: 'https://raw.githubusercontent.com/emqx/emqx/refs/heads/master/README.md'
  icon: 'https://avatars.githubusercontent.com/u/25221711?s=96&v=4'
  templateType: inline
  defaults:
    app_host:
      type: string
      value: ${{ random(8) }}
    app_name:
      type: string
      value: emqx-${{ random(8) }}
    cookie:
      type: string
      value: ${{ random(32) }}
  inputs:
    REPLICA_COUNT:
      description: 'replicas count'
      type: number
      default: "3"
      required: true
    TCP_ENABLE:
      description: 'enable external tcp'
      type: boolean
      default: 'false'
      required: false

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ${{ defaults.app_name }}
  annotations:
    originImageName: emqx:5.8.5
    deploy.cloud.sealos.io/minReplicas: "${{ inputs.REPLICA_COUNT }}"
    deploy.cloud.sealos.io/maxReplicas: "${{ inputs.REPLICA_COUNT }}"
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    app: ${{ defaults.app_name }}
spec:
  replicas: ${{ inputs.REPLICA_COUNT }}
  revisionHistoryLimit: 1
  minReadySeconds: 10
  serviceName: ${{ defaults.app_name }}-headless
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}
    spec:
      terminationGracePeriodSeconds: 10
      automountServiceAccountToken: false
      enableServiceLinks: false
      containers:
        - name: ${{ defaults.app_name }}
          image: emqx:5.8.5
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: EMQX_NODE__COOKIE
              value: ${{ defaults.cookie }}
            - name: EMQX_CLUSTER__DISCOVERY_STRATEGY
              value: "dns"
            - name: EMQX_CLUSTER__DNS__RECORD_TYPE
              value: srv
            - name: EMQX_CLUSTER__DNS__NAME
              value: ${{ defaults.app_name }}-headless.${{ SEALOS_NAMESPACE }}.svc.cluster.local
            - name: EMQX_HOST
              value: $(POD_NAME).$(EMQX_CLUSTER__DNS__NAME)
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 1
              memory: 1Gi
          ports:
            - containerPort: 1883
              protocol: TCP
              name: 'tcp'
            - containerPort: 8883
              protocol: TCP
              name: 'ssl'
            - containerPort: 8083
              protocol: TCP
              name: 'ws'
            - containerPort: 8084
              protocol: TCP
              name: 'wss'
            - containerPort: 18083
              protocol: TCP
              name: 'api'
            - containerPort: 4370
              protocol: TCP
              name: 'cluster-erlang'
            - containerPort: 5369
              protocol: TCP
              name: 'cluster-rpc'
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: vn-optvn-emqxvn-data
              mountPath: /opt/emqx/data
            - name: vn-optvn-emqxvn-log
              mountPath: /opt/emqx/log
      volumes: []
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: Always
  volumeClaimTemplates:
    - metadata:
        annotations:
          path: /opt/emqx/data
          value: '1'
        name: vn-optvn-emqxvn-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    - metadata:
        annotations:
          path: /opt/emqx/log
          value: '1'
        name: vn-optvn-emqxvn-log
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

---
${{ if(inputs.TCP_ENABLE === 'true') }}
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}-tcp
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  type: NodePort
  ports:
    - protocol: TCP
      port: 1883
      targetPort: 1883
      name: 'tcp'
    - protocol: TCP
      port: 8883
      targetPort: 8883
      name: 'ssl'
  selector:
    app: ${{ defaults.app_name }}
${{ endif() }}

---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}-headless
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - port: 4370
      protocol: TCP
      name: 'cluster-erlang'
    - port: 5369
      protocol: TCP
      name: 'cluster-rpc'
  selector:
    app: ${{ defaults.app_name }}

---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  type: ClusterIP
  ports:
    - name: dashboard
      port: 18083
    - name: mqtt-ws
      port: 8083
  selector:
    app: ${{ defaults.app_name }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    cloud.sealos.io/app-deploy-manager-domain: ${{ defaults.app_host }}
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: ${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: ${{ defaults.app_name }}
                port:
                  number: 18083
          - pathType: Prefix
            path: /mqtt
            backend:
              service:
                name: ${{ defaults.app_name }}
                port:
                  number: 8083
  tls:
    - hosts:
        - ${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      secretName: ${{ SEALOS_CERT_SECRET_NAME }}

---
apiVersion: app.sealos.io/v1
kind: App
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  data:
    url: https://${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
  displayType: normal
  icon: "https://avatars.githubusercontent.com/u/25221711?s=96&v=4"
  name: "EMQX"
  type: link