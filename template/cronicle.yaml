apiVersion: app.sealos.io/v1
kind: Template
metadata: 
  name: cronicle
spec:
  title: 'Cronicle'                         
  url: 'http://cronicle.net'                         
  gitRepo: 'https://github.com/jhuckaby/Cronicle'        
  author: 'cronicle'                                     
  description: 'Cronicle is a multi-server task scheduler and runner, with a web based front-end UI.It handles both scheduled, repeating and on-demand jobs, targeting any number of slave servers, with real-time stats and live log viewer.Written in Node.js, proudly open source and MIT licensed.default username and password is admin'    
  readme: 'https://raw.githubusercontent.com/jhuckaby/Cronicle/master/README.md'
  icon: 'https://cronicle.net/images/clock-bkgnd.png'
  templateType: inline
  categories:
    - dev-ops
  defaults:
    app_name:
      type: string
      value: cronicle-${{ random(8) }}
    app_host:
      type: string
      value: ${{ random(8) }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ${{ defaults.app_name }}
  annotations:
    originImageName: soulteary/cronicle
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
    deploy.cloud.sealos.io/resize: 3Gi
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    app: ${{ defaults.app_name }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
  minReadySeconds: 10
  serviceName: ${{ defaults.app_name }}
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: ${{ defaults.app_name }}
          image: soulteary/cronicle
          env: []
          resources:
            requests:
              cpu: 50m
              memory: 51Mi
            limits:
              cpu: 500m
              memory: 512Mi
          ports:
            - containerPort: 3012
          imagePullPolicy: Always
          volumeMounts:
            - name: vn-optvn-${{ defaults.app_name }}-data
              mountPath: /opt/cronicle/data
            - name: vn-optvn-${{ defaults.app_name }}-logs
              mountPath: /opt/cronicle/logs
            - name: vn-optvn-${{ defaults.app_name }}-plugins
              mountPath: /opt/cronicle/plugins
      volumes: []
  volumeClaimTemplates:
    - metadata:
        annotations:
          path: /opt/cronicle/data
          value: '1'
        name: vn-optvn-${{ defaults.app_name }}-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    - metadata:
        annotations:
          path: /opt/cronicle/logs
          value: '1'
        name: vn-optvn-${{ defaults.app_name }}-logs
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    - metadata:
        annotations:
          path: /opt/cronicle/plugins
          value: '1'
        name: vn-optvn-${{ defaults.app_name }}-plugins
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  ports:
    - port: 3012
      targetPort: 3012
      name: ${{ defaults.app_name }}-port
  selector:
    app: ${{ defaults.app_name }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    cloud.sealos.io/app-deploy-manager-domain: ${{ defaults.app_host }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
spec:
  rules:
    - host: ${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: ${{ defaults.app_name }}
                port:
                  number: 3012
  tls:
    - hosts:
        - ${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      secretName: ${{ SEALOS_CERT_SECRET_NAME }}
