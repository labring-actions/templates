apiVersion: app.sealos.io/v1
kind: Template
metadata:
  name: chatgpt-next-web
spec:
  title: 'chatgpt-next-web'
  url: 'https://github.com/Yidadaa/ChatGPT-Next-Web'
  gitRepo: 'https://github.com/Yidadaa/ChatGPT-Next-Web'
  author: 'Sealos'
  description: '一键免费部署你的跨平台私人 ChatGPT 应用'
  readme: 'https://raw.githubusercontent.com/Yidadaa/ChatGPT-Next-Web/main/README.md'
  icon: 'https://raw.githubusercontent.com/Yidadaa/ChatGPT-Next-Web/main/docs/images/icon.svg'
  templateType: inline
  categories:
    - ai
  defaults:
    app_host:
      # number or string..
      type: string
      value: ${{ random(8) }}
    app_name:
      type: string
      value: chatgpt-next-web-${{ random(8) }}
  inputs:
    OPENAI_API_KEY:
      description: '这是你在 OpenAI 账户页面申请的 API 密钥，使用英文逗号隔开多个 key，这样可以随机轮询这些 key'
      type: string
      default: ''
      required: true
    CODE:
      description: '设置页面中的访问密码，可以使用逗号隔开多个密码'
      type: string
      default: ''
      required: false
    BASE_URL:
      description: '如果你手动配置了 OpenAI 接口代理，可以使用此配置项来覆盖默认的 OpenAI API 请求基础 URL'
      type: string
      default: 'https://api.openai.com'
      required: false
    OPENAI_ORG_ID:
      description: '指定 OpenAI 中的组织 ID'
      type: string
      default: ''
      required: false
    HIDE_USER_API_KEY:
      description: '如果你不想让用户自行填入 API Key，将此环境变量设置为 1 即可'
      type: string
      default: ''
      required: false
    DISABLE_GPT4:
      description: '如果你不想让用户使用 GPT-4，将此环境变量设置为 1 即可'
      type: string
      default: ''
      required: false
    HIDE_BALANCE_QUERY:
      description: '如果你想启用余额查询功能，将此环境变量设置为 1 即可'
      type: string
      default: ''
      required: false
    AZURE_URL:
      description: 'Azure 部署地址'
      type: string
      default: 'https://{azure-resource-url}/openai/deployments/{deploy-name}'
      required: false
    AZURE_API_KEY:
      description: 'Azure 密钥'
      type: string
      default: ''
      required: false
    AZURE_API_VERSION:
      description: 'Azure API 版本'
      type: string
      default: ''
      required: false

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{ defaults.app_name }}
  annotations:
    originImageName: yidadaa/chatgpt-next-web
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    app: ${{ defaults.app_name }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}
    spec:
      containers:
        - name: ${{ defaults.app_name }}
          image: yidadaa/chatgpt-next-web
          env:
            - name: OPENAI_API_KEY
              value: ${{ inputs.OPENAI_API_KEY }}
            - name: CODE
              value: ${{ inputs.CODE }}
            - name: BASE_URL
              value: ${{ inputs.BASE_URL }}
            - name: OPENAI_ORG_ID
              value: ${{ inputs.OPENAI_ORG_ID }}
            - name: HIDE_USER_API_KEY
              value: ${{ inputs.HIDE_USER_API_KEY }}
            - name: DISABLE_GPT4
              value: ${{ inputs.DISABLE_GPT4 }}
            - name: HIDE_BALANCE_QUERY
              value: ${{ inputs.HIDE_BALANCE_QUERY }}
            - name: AZURE_URL
              value: ${{ inputs.AZURE_URL }}
            - name: AZURE_API_KEY
              value: ${{ inputs.AZURE_API_KEY }}
            - name: AZURE_API_VERSION
              value: ${{ inputs.AZURE_API_VERSION }}
          resources:
            requests:
              cpu: 100m
              memory: 102Mi
            limits:
              cpu: 1000m
              memory: 1024Mi
          command: []
          args: []
          ports:
            - containerPort: 3000
          imagePullPolicy: Always
          volumeMounts: []
      volumes: []
---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  ports:
    - port: 3000
  selector:
    app: ${{ defaults.app_name }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    cloud.sealos.io/app-deploy-manager-domain: ${{ defaults.app_host }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: ${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      http:
        paths:
          - pathType: Prefix
            path: /()(.*)
            backend:
              service:
                name: ${{ defaults.app_name }}
                port:
                  number: 3000
  tls:
    - hosts:
        - ${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      secretName: ${{ SEALOS_CERT_SECRET_NAME }}
