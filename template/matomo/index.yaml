apiVersion: app.sealos.io/v1
kind: Template
metadata:
  name: matomo
spec:
  title: 'Matomo'
  url: 'https://matomo.org/'
  gitRepo: 'https://github.com/matomo-org/matomo'
  author: 'Sealos'
  description: 'Matomo is the leading open source web analytics platform that gives you valuable insights into your website visitors'
  readme: 'https://raw.githubusercontent.com/matomo-org/matomo/refs/heads/5.x-dev/README.md'
  icon: 'https://avatars.githubusercontent.com/u/698038?s=48&v=4'
  templateType: inline
  locale: en
  i18n:
    zh:
      title: 'Matomo'
      description: 'Matomo 是领先的开源网站分析平台，为您提供关于网站访客的宝贵洞察'
  categories:
    - monitor
    - tool
  defaults:
    app_name:
      type: string
      value: matomo-${{ random(8) }}
    app_host:
      type: string
      value: matomo-${{ random(8) }}

---
# MySQL Database Resources
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    sealos-db-provider-cr: ${{ defaults.app_name }}-mysql
    app.kubernetes.io/instance: ${{ defaults.app_name }}-mysql
    app.kubernetes.io/managed-by: kbcli
  name: ${{ defaults.app_name }}-mysql

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    sealos-db-provider-cr: ${{ defaults.app_name }}-mysql
    app.kubernetes.io/instance: ${{ defaults.app_name }}-mysql
    app.kubernetes.io/managed-by: kbcli
  name: ${{ defaults.app_name }}-mysql
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    sealos-db-provider-cr: ${{ defaults.app_name }}-mysql
    app.kubernetes.io/instance: ${{ defaults.app_name }}-mysql
    app.kubernetes.io/managed-by: kbcli
  name: ${{ defaults.app_name }}-mysql
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ${{ defaults.app_name }}-mysql
subjects:
  - kind: ServiceAccount
    name: ${{ defaults.app_name }}-mysql

---
apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  finalizers:
    - cluster.kubeblocks.io/finalizer
  labels:
    clusterdefinition.kubeblocks.io/name: apecloud-mysql
    clusterversion.kubeblocks.io/name: ac-mysql-8.0.30
    sealos-db-provider-cr: ${{ defaults.app_name }}-mysql
  annotations: {}
  name: ${{ defaults.app_name }}-mysql
spec:
  affinity:
    nodeLabels: {}
    podAntiAffinity: Preferred
    tenancy: SharedNode
    topologyKeys: []
  clusterDefinitionRef: apecloud-mysql
  clusterVersionRef: ac-mysql-8.0.30
  componentSpecs:
    - componentDefRef: mysql
      monitor: true
      name: mysql
      replicas: 1
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 51Mi
      serviceAccountName: ${{ defaults.app_name }}-mysql
      volumeClaimTemplates:
        - name: data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 5Gi
            storageClassName: openebs-backup
  terminationPolicy: Delete
  tolerations: []

---
# MySQL Init Job
apiVersion: batch/v1
kind: Job
metadata:
  name: ${{ defaults.app_name }}-mysql-init
spec:
  completions: 1
  template:
    spec:
      containers:
        - name: mysql-init
          image: mysql:8.0
          env:
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-mysql-conn-credential
                  key: password
            - name: MYSQL_HOST
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-mysql-conn-credential
                  key: host
          command:
            - /bin/sh
            - -c
            - |
              until mysql -h${MYSQL_HOST} -uroot -p${MYSQL_PASSWORD} -e 'CREATE DATABASE IF NOT EXISTS matomo CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;' &>/dev/null; do sleep 1; done
      restartPolicy: Never
  backoffLimit: 0
  ttlSecondsAfterFinished: 300

---
# ConfigMap with vn- naming
apiVersion: v1
kind: ConfigMap
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
data:
  vn-etcvn-nginxvn-nginxvn-conf: |
    events {
      worker_connections 768;
    }

    http {
      upstream backend {
        server localhost:9000;
      }

      include /etc/nginx/mime.types;
      default_type application/octet-stream;
      gzip on;
      gzip_disable "msie6";

      map $http_x_forwarded_proto $proxy_x_forwarded_proto {
        default $http_x_forwarded_proto;
        ''      $scheme;
      }
      map $http_x_forwarded_port $proxy_x_forwarded_port {
        default $http_x_forwarded_port;
        ''      $server_port;
      }
      map $http_upgrade $proxy_connection {
        default upgrade;
        '' close;
      }
      map $scheme $proxy_x_forwarded_ssl {
        default off;
        https on;
      }
      proxy_http_version 1.1;
      proxy_buffering off;
      proxy_set_header Host $http_host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $proxy_connection;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
      proxy_set_header X-Forwarded-Ssl $proxy_x_forwarded_ssl;
      proxy_set_header X-Forwarded-Port $proxy_x_forwarded_port;
      proxy_set_header Proxy "";

      server {
        listen 80;

        root /var/www/html/;
        index index.php index.html index.htm;

        location / {
          try_files $uri $uri/ =404;
        }

        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
          root /usr/share/nginx/html;
        }

        location = /favicon.ico {
          log_not_found off;
          access_log off;
        }

        location ~ \.php$ {
          fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
          fastcgi_param  SERVER_SOFTWARE    nginx;
          fastcgi_param  QUERY_STRING       $query_string;
          fastcgi_param  REQUEST_METHOD     $request_method;
          fastcgi_param  CONTENT_TYPE       $content_type;
          fastcgi_param  CONTENT_LENGTH     $content_length;
          fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
          fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;
          fastcgi_param  REQUEST_URI        $request_uri;
          fastcgi_param  DOCUMENT_URI       $document_uri;
          fastcgi_param  DOCUMENT_ROOT      $document_root;
          fastcgi_param  SERVER_PROTOCOL    $server_protocol;
          fastcgi_param  REMOTE_ADDR        $remote_addr;
          fastcgi_param  REMOTE_PORT        $remote_port;
          fastcgi_param  SERVER_ADDR        $server_addr;
          fastcgi_param  SERVER_PORT        $server_port;
          fastcgi_param  SERVER_NAME        $server_name;
          fastcgi_intercept_errors on;
          fastcgi_pass backend;
        }
      }
    }

---
# StatefulSet (converted from Deployment)
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ${{ defaults.app_name }}
  annotations:
    originImageName: matomo:5.3.2-fpm
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    app: ${{ defaults.app_name }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  serviceName: ${{ defaults.app_name }}
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}
    spec:
      automountServiceAccountToken: false
      containers:
        - name: ${{ defaults.app_name }}
          image: matomo:5.3.2-fpm
          imagePullPolicy: IfNotPresent
          env:
            - name: MATOMO_DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-mysql-conn-credential
                  key: host
            - name: MATOMO_DATABASE_ADAPTER
              value: "MYSQL"
            - name: MATOMO_DATABASE_TABLES_PREFIX
              value: "matomo_"
            - name: MATOMO_DATABASE_USERNAME
              value: "root"
            - name: MATOMO_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-mysql-conn-credential
                  key: password
            - name: MATOMO_DATABASE_DBNAME
              value: "matomo"
            - name: MATOMO_GENERAL_TRUSTED_HOST
              value: "${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}"
          ports:
            - name: php-fpm
              containerPort: 9000
              protocol: TCP
          volumeMounts:
            - name: vn-varvn-wwwvn-html
              mountPath: /var/www/html
          resources:
            requests:
              cpu: 20m
              memory: 25Mi
            limits:
              cpu: 200m
              memory: 256Mi
        - name: ${{ defaults.app_name }}-nginx
          image: nginx:alpine
          imagePullPolicy: IfNotPresent
          command: ["nginx", "-g", "daemon off;", "-c", "/etc/nginx/nginx.conf"]
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: vn-etcvn-nginxvn-nginxvn-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: ./etc/nginx/nginx.conf
            - name: vn-varvn-wwwvn-html
              mountPath: /var/www/html
          resources:
            requests:
              cpu: 20m
              memory: 25Mi
            limits:
              cpu: 200m
              memory: 256Mi
      volumes:
        - name: vn-etcvn-nginxvn-nginxvn-conf
          configMap:
            name: ${{ defaults.app_name }}
            items:
              - key: vn-etcvn-nginxvn-nginxvn-conf
                path: ./etc/nginx/nginx.conf
            defaultMode: 420
  volumeClaimTemplates:
    - metadata:
        annotations:
          path: /var/www/html
          value: '1'
        name: vn-varvn-wwwvn-html
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: ${{ defaults.app_name }}

---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    cloud.sealos.io/app-deploy-manager-domain: ${{ defaults.app_host }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: ${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: ${{ defaults.app_name }}
                port:
                  number: 80
  tls:
    - hosts:
        - ${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      secretName: ${{ SEALOS_CERT_SECRET_NAME }}

---
# App CR
apiVersion: app.sealos.io/v1
kind: App
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  data:
    url: https://${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
  displayType: normal
  icon: "https://avatars.githubusercontent.com/u/698038?s=48&v=4"
  name: Matomo
  type: link