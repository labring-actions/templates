apiVersion: app.sealos.io/v1
kind: Template
metadata:
  name: dbgate
spec:
  title: 'DbGate'
  url: 'https://dbgate.org'
  gitRepo: 'https://github.com/dbgate/dbgate'
  author: 'grafana'
  description: 'DbGate is cross-platform database manager. It is designed to be simple to use and effective, when working with more databases simultaneously. But there are also many advanced features like schema compare, visual query designer, chart visualisation or batch export and import.'
  readme: 'https://raw.githubusercontent.com/dbgate/dbgate/master/README.md'
  icon: 'https://avatars.githubusercontent.com/u/78292618?s=48&v=4'
  templateType: inline
  defaults:
    app_name:
      type: string
      value: dbgate-${{ random(8) }}
  inputs:
    app_host:
      description: 'Set app host'
      type: string
      default: dbgate-${{ random(8) }}
      required: true
    user_name:
      description: 'Set username'
      type: string
      default: 'admin'
      required: true
    user_password:
      description: 'Set password'
      type: string
      default: 'password@dbgate'
      required: true
    token_lifetime:
      description: 'Set token lifetime'
      type: string
      default: '1d'
      required: false
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ${{ defaults.app_name }}
  annotations:
    originImageName: dbgate/dbgate
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
    deploy.cloud.sealos.io/resize: 2Gi
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    app: ${{ defaults.app_name }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
  minReadySeconds: 10
  serviceName: ${{ defaults.app_name }}
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: ${{ defaults.app_name }}
          image: dbgate/dbgate
          env:
            - name: LOGINS
              value: ${{ inputs.user_name }}
            - name: LOGIN_PASSWORD_admin
              value: ${{ inputs.user_password }}
            - name: TOKEN_LIFETIME
              value: ${{ inputs.token_lifetime }}
          resources:
            requests:
              cpu: 50m
              memory: 51Mi
            limits:
              cpu: 500m
              memory: 512Mi
          ports:
            - containerPort: 3000
          imagePullPolicy: Always
          volumeMounts:
            - name: vn-rootvn-vn-${{ defaults.app_name }}
              mountPath: /root/.dbgate
      volumes: []
  volumeClaimTemplates:
    - metadata:
        annotations:
          path: /root/.dbgate
          value: '2'
        name: vn-rootvn-vn-${{ defaults.app_name }}
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  ports:
    - port: 3000
      targetPort: 3000
      name: ${{ defaults.app_name }}-port
  selector:
    app: ${{ defaults.app_name }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    cloud.sealos.io/app-deploy-manager-domain: ${{ inputs.app_host }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
spec:
  rules:
    - host: ${{ inputs.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: ${{ defaults.app_name }}
                port:
                  number: 3000
  tls:
    - hosts:
        - ${{ inputs.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      secretName: ${{ SEALOS_CERT_SECRET_NAME }}
---
apiVersion: app.sealos.io/v1
kind: App
metadata:
  name: ${{ defaults.app_name }}
spec:
  data:
    url: https://${{ inputs.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
  displayType: normal
  icon: 'https://${{ inputs.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}/favicon.ico'
  menuData:
    nameColor: text-black
  name: ${{ defaults.app_name }}
  type: iframe