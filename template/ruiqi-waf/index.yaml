apiVersion: app.sealos.io/v1
kind: Template
metadata:
  name: Ruiqi-Waf
spec:
  title: "Ruiqi-Waf"
  url: "https://github.com/HUAHUAI23/simple-waf"
  gitRepo: "https://github.com/HUAHUAI23/simple-waf"
  author: "Sealos"
  description: "A modern web application firewall (WAF) management system built on top of HAProxy and OWASP Coraza WAF with the Coraza SPOA integration. This system provides a comprehensive backend API for managing HAProxy configurations, Coraza WAF rules, and traffic inspection."
  readme: "https://raw.githubusercontent.com/HUAHUAI23/simple-waf/main/README.md"
  icon: "https://raw.githubusercontent.com/HUAHUAI23/simple-waf/main/server/web/public/logo32.png"
  templateType: inline
  categories:
    - dev-ops
  defaults:
    app_name:
      type: string
      value: ${{ random(8) }}
    jwt_secret:
      type: string
      value: ${{ random(24) }}
    domain:
      type: string
      value: ruiqi-${{ random(8) }}
---

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    sealos-db-provider-cr: ${{ defaults.app_name }}-mongo
    app.kubernetes.io/instance: ${{ defaults.app_name }}-mongo
    app.kubernetes.io/managed-by: kbcli
  name: ${{ defaults.app_name }}-mongo

---

apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  finalizers:
    - cluster.kubeblocks.io/finalizer
  labels:
    clusterdefinition.kubeblocks.io/name: mongodb
    clusterversion.kubeblocks.io/name: mongodb-6.0
    sealos-db-provider-cr: ${{ defaults.app_name }}-mongo
  name: ${{ defaults.app_name }}-mongo
spec:
  affinity:
    nodeLabels: {}
    podAntiAffinity: Preferred
    tenancy: SharedNode
    topologyKeys: []
  clusterDefinitionRef: mongodb
  clusterVersionRef: mongodb-6.0
  backup:
    enabled: true
    cronExpression: 0 18 * * *
    method: backupTool
    pitrEnabled: false
    retentionPeriod: 7d
  componentSpecs:
    - componentDefRef: mongodb
      monitor: true
      name: mongodb
      replicas: 1
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 50m
          memory: 128Mi
      serviceAccountName: ${{ defaults.app_name }}-mongo
      volumeClaimTemplates:
        - name: data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 5Gi
  terminationPolicy: Delete
  tolerations: []

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    sealos-db-provider-cr: ${{ defaults.app_name }}-mongo
    app.kubernetes.io/instance: ${{ defaults.app_name }}-mongo
    app.kubernetes.io/managed-by: kbcli
  name: ${{ defaults.app_name }}-mongo
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    sealos-db-provider-cr: ${{ defaults.app_name }}-mongo
    app.kubernetes.io/instance: ${{ defaults.app_name }}-mongo
    app.kubernetes.io/managed-by: kbcli
  name: ${{ defaults.app_name }}-mongo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ${{ defaults.app_name }}-mongo
subjects:
  - kind: ServiceAccount
    name: ${{ defaults.app_name }}-mongo


---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}-waf
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}-waf
spec:
  type: ClusterIP
  ports:
    - port: 2333
      targetPort: 2333
      protocol: TCP
      name: http
  selector:
    app: ${{ defaults.app_name }}-waf

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{ defaults.app_name }}-waf
  labels:
    app: ${{ defaults.app_name }}-waf
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}-waf
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}-waf
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}-waf
    spec:
      containers:
        - name: ${{ defaults.app_name }}-waf
          securityContext: {}
          image: limbo2342/simple-waf:beta.0.9
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 2333
              protocol: TCP
          env:
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-mongo-conn-credential
                  key: password
            - name: JWT_SECRET
              value: ${{ defaults.jwt_secret }}
            - name: IS_PRODUCTION 
              value: "false"
            - name: VITE_API_BASE_URL
              value: "http://${{ defaults.app_name }}-waf.${{ SEALOS_NAMESPACE }}.svc:2333/api/v1"
            - name: DB_URI
              value: "mongodb://root:$(MONGO_PASSWORD)@${{ defaults.app_name }}-mongo-mongodb.${{ SEALOS_NAMESPACE }}.svc:27017/waf?authSource=admin&w=majority"
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${{ defaults.app_name }}-waf
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}-waf
    cloud.sealos.io/app-deploy-manager-domain: ${{ defaults.domain }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: ${{ defaults.domain }}.${{ SEALOS_CLOUD_DOMAIN }}
      http:
        paths:
          - backend:
              service:
                name: ${{ defaults.app_name }}-waf
                port:
                  number: 2333
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - ${{ defaults.domain }}.${{ SEALOS_CLOUD_DOMAIN }}
      secretName: ${{ SEALOS_CERT_SECRET_NAME }}

---
apiVersion: app.sealos.io/v1
kind: App
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  data:
    url: https://${{ defaults.domain }}.${{ SEALOS_CLOUD_DOMAIN }}
  displayType: normal
  icon: "https://raw.githubusercontent.com/HUAHUAI23/simple-waf/main/server/web/public/logo32.png"
  name: ${{ defaults.app_name }}
  type: link
