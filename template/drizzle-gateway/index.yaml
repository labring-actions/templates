apiVersion: app.sealos.io/v1
kind: Template
metadata:
  name: drizzle-studio
spec:
  title: 'Drizzle Studio (Gateway)'
  url: 'https://gateway.drizzle.team/'
  gitRepo: 'https://github.com/drizzle-team/drizzle-orm'
  author: 'Sealos'
  description: 'Drizzle Studio (Gateway) is a self-hosted, browser-based interface for exploring and managing your database schema using the Drizzle ORM ecosystem. It acts as a gateway between your database and Drizzle Studio’s frontend, enabling secure connections, schema introspection, and query execution directly from your own infrastructure instead of relying on a public service.'
  readme: 'https://raw.githubusercontent.com/drizzle-team/drizzle-orm/refs/heads/main/README.md'
  icon: 'https://avatars.githubusercontent.com/u/108468352?s=48&v=4'
  templateType: inline
  locale: en
  i18n:
    zh:
      description: 'Drizzle Studio (Gateway) 是一款现代化的 TypeScript ORM，主打轻量与强类型体验。它兼容 PostgreSQL、MySQL、SQLite 等主流数据库，并对多种 Serverless/边缘数据库提供现成适配。'
  categories:
    - tool
  defaults:
    app_name:
      type: string
      value: drizzle-studio-${{ random(8) }}
    app_host:
      type: string
      value: drizzle-studio-${{ random(8) }}
  inputs:
    masterpass:
      description: 'Master password used by Drizzle Studio Gateway (optional)'
      type: string
      default: ''
      required: false

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ${{ defaults.app_name }}
  annotations:
    originImageName: ghcr.io/drizzle-team/gateway:latest
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    app: ${{ defaults.app_name }}
spec:
  serviceName: ${{ defaults.app_name }}
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}
    spec:
      automountServiceAccountToken: false
      containers:
        - name: ${{ defaults.app_name }}
          image: ghcr.io/drizzle-team/gateway:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: PORT
              value: '4983'
            - name: STORE_PATH
              value: '/app'
            ${{ if(inputs.masterpass !== '') }}
            - name: MASTERPASS
              value: ${{ inputs.masterpass }}
            ${{ endif() }}
          ports:
            - containerPort: 4983
              name: http
          volumeMounts:
            - name: vn-app
              mountPath: /app
          resources:
            requests:
              cpu: 10m
              memory: 16Mi
            limits:
              cpu: 200m
              memory: 256Mi
  volumeClaimTemplates:
    - metadata:
        annotations:
          path: /app
          value: '1'
        name: vn-app
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  type: ClusterIP
  ports:
    - port: 4983
      targetPort: 4983
      protocol: TCP
  selector:
    app: ${{ defaults.app_name }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    cloud.sealos.io/app-deploy-manager-domain: ${{ defaults.app_host }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: ${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: ${{ defaults.app_name }}
                port:
                  number: 4983
  tls:
    - hosts:
        - ${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      secretName: ${{ SEALOS_CERT_SECRET_NAME }}

---
apiVersion: app.sealos.io/v1
kind: App
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  data:
    url: https://${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
  displayType: normal
  icon: 'https://avatars.githubusercontent.com/u/108468352?s=48&v=4'
  name: ${{ defaults.app_name }}
  type: link

