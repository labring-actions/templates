apiVersion: app.sealos.io/v1
kind: Template
metadata:
  name: budibase
spec:
  title: 'Budibase'
  url: 'https://budibase.com/'
  gitRepo: 'https://github.com/Budibase/budibase'
  author: 'Sealos'
  description: 'Budibase is an open-source low-code platform that helps you build and deploy modern business apps in minutes'
  readme: 'https://raw.githubusercontent.com/Budibase/budibase/refs/heads/master/README.md'
  icon: 'https://avatars.githubusercontent.com/u/45009727?s=48&v=4'
  templateType: inline
  locale: en
  i18n:
    zh:
      title: 'Budibase'
      description: 'Budibase 是一个开源的低代码平台，帮助您在几分钟内构建和部署现代化的业务应用'
  categories:
    - low-code
    - tool
  defaults:
    app_name:
      type: string
      value: budibase-${{ random(8) }}
    app_host:
      type: string
      value: ${{ random(8) }}
  inputs:
    admin_email:
      description: 'Admin email address'
      type: string
      default: ''
      required: true
    admin_password:
      description: 'Admin password (minimum 8 characters)'
      type: string
      default: ''
      required: true
    enable_analytics:
      description: 'Enable analytics'
      type: boolean
      default: 'false'
      required: false
    smtp_enabled:
      description: 'Enable SMTP for email notifications'
      type: boolean
      default: 'false'
      required: false
    smtp_host:
      description: 'SMTP server host'
      type: string
      default: ''
      required: false
      if: inputs.smtp_enabled === 'true'
    smtp_port:
      description: 'SMTP server port'
      type: string
      default: '587'
      required: false
      if: inputs.smtp_enabled === 'true'
    smtp_user:
      description: 'SMTP username'
      type: string
      default: ''
      required: false
      if: inputs.smtp_enabled === 'true'
    smtp_password:
      description: 'SMTP password'
      type: string
      default: ''
      required: false
      if: inputs.smtp_enabled === 'true'

---
apiVersion: objectstorage.sealos.io/v1
kind: ObjectStorageBucket
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  policy: private

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    sealos-db-provider-cr: ${{ defaults.app_name }}-redis
    app.kubernetes.io/instance: ${{ defaults.app_name }}-redis
    app.kubernetes.io/managed-by: kbcli
  name: ${{ defaults.app_name }}-redis

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    sealos-db-provider-cr: ${{ defaults.app_name }}-redis
    app.kubernetes.io/instance: ${{ defaults.app_name }}-redis
    app.kubernetes.io/managed-by: kbcli
  name: ${{ defaults.app_name }}-redis
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    sealos-db-provider-cr: ${{ defaults.app_name }}-redis
    app.kubernetes.io/instance: ${{ defaults.app_name }}-redis
    app.kubernetes.io/managed-by: kbcli
  name: ${{ defaults.app_name }}-redis
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ${{ defaults.app_name }}-redis
subjects:
  - kind: ServiceAccount
    name: ${{ defaults.app_name }}-redis

---
apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  finalizers:
    - cluster.kubeblocks.io/finalizer
  labels:
    clusterdefinition.kubeblocks.io/name: redis
    clusterversion.kubeblocks.io/name: redis-7.0.6
    sealos-db-provider-cr: ${{ defaults.app_name }}-redis
  name: ${{ defaults.app_name }}-redis
spec:
  affinity:
    nodeLabels: {}
    podAntiAffinity: Preferred
    tenancy: SharedNode
    topologyKeys: []
  clusterDefinitionRef: redis
  clusterVersionRef: redis-7.0.6
  componentSpecs:
    - componentDefRef: redis
      monitor: true
      name: redis
      replicas: 1
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 51Mi
      serviceAccountName: ${{ defaults.app_name }}-redis
      switchPolicy:
        type: Noop
      volumeClaimTemplates:
        - name: data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
            storageClassName: openebs-backup
    - componentDefRef: redis-sentinel
      monitor: true
      name: redis-sentinel
      replicas: 1
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 100m
          memory: 100Mi
      serviceAccountName: ${{ defaults.app_name }}-redis
  terminationPolicy: Delete
  tolerations: []

---
apiVersion: v1
kind: Secret
metadata:
  name: ${{ defaults.app_name }}-couchdb
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}-couchdb
type: Opaque
stringData:
  adminUsername: admin
  adminPassword: ${{ random(16) }}
  erlangCookie: ${{ random(16) }}
  cookieAuthSecret: ${{ random(16) }}

---
apiVersion: v1
kind: Secret
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
type: Opaque
stringData:
  internal_api_key: ${{ random(16) }}
  jwt_secret: ${{ random(16) }}
  bb_encryption_key: ${{ random(16) }}
  api_encryption_key: ${{ random(16) }}
  admin_email: ${{ inputs.admin_email }}
  admin_password: ${{ inputs.admin_password }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ${{ defaults.app_name }}-couchdb
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}-couchdb
data:
  vn-tmpvn-chartvn-ini: |
    [chttpd]
    bind_address = any
    require_valid_user = false

    [couchdb]
    uuid = ${{ defaults.app_name }}-couchdb

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ${{ defaults.app_name }}-couchdb
  annotations:
    originImageName: budibase/couchdb:v3.3.3-sqs-v2.1.1
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}-couchdb
    app: ${{ defaults.app_name }}-couchdb
spec:
  replicas: 1
  revisionHistoryLimit: 1
  serviceName: ${{ defaults.app_name }}-couchdb
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}-couchdb
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}-couchdb
    spec:
      automountServiceAccountToken: false
      initContainers:
        - name: init-copy
          image: busybox:1.37.0
          imagePullPolicy: IfNotPresent
          command:
            - 'sh'
            - '-c'
            - 'cp /tmp/chart.ini /default.d; ls -lrt /default.d;'
          volumeMounts:
          - name: ${{ defaults.app_name }}-couchdb-cm
            mountPath: /tmp/chart.ini
            subPath: ./tmp/chart.ini
          - name: vn-optvn-couchdbvn-etcvn-defaultvn-d
            mountPath: /default.d
      containers:
        - name: ${{ defaults.app_name }}-couchdb
          image: budibase/couchdb:v3.3.3-sqs-v2.1.1
          imagePullPolicy: IfNotPresent
          ports:
            - name: couchdb
              containerPort: 5984
            - name: epmd
              containerPort: 4369
            - containerPort: 9100
            - containerPort: 4984
              name: sqs
          env:
            - name: COUCHDB_USER
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-couchdb
                  key: adminUsername
            - name: COUCHDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-couchdb
                  key: adminPassword
            - name: COUCHDB_SECRET
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-couchdb
                  key: cookieAuthSecret
            - name: COUCHDB_ERLANG_COOKIE
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-couchdb
                  key: erlangCookie
            - name: ERL_FLAGS
              value: " -name couchdb "
          livenessProbe:
            httpGet:
              path: /_up
              port: 5984
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /_up
              port: 5984
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 50m
              memory: 102Mi
            limits:
              cpu: 500m
              memory: 1024Mi
          volumeMounts:
          - name: vn-optvn-couchdbvn-etcvn-defaultvn-d
            mountPath: /opt/couchdb/etc/default.d
          - name: vn-optvn-couchdbvn-data
            mountPath: /opt/couchdb/data
          - name: ${{ defaults.app_name }}-couchdb-cm
            mountPath: /tmp/chart.ini
            subPath: ./tmp/chart.ini
      volumes:
        - name: ${{ defaults.app_name }}-couchdb-cm
          configMap:
            name: ${{ defaults.app_name }}-couchdb
            items:
              - key: vn-tmpvn-chartvn-ini
                path: ./tmp/chart.ini
  volumeClaimTemplates:
    - metadata:
        annotations:
          path: /opt/couchdb/data
          value: '1'
        name: vn-optvn-couchdbvn-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    - metadata:
        annotations:
          path: /opt/couchdb/etc/default.d
          value: '1'
        name: vn-optvn-couchdbvn-etcvn-defaultvn-d
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}-couchdb-headless

spec:
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: couchdb
      port: 5984
  selector:
    app: ${{ defaults.app_name }}-couchdb

---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}-couchdb
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}-couchdb
spec:
  ports:
    - port: 5984
      name: couchdb
      protocol: TCP
      targetPort: 5984
    - name: sqs
      port: 4984
      protocol: TCP
      targetPort: 4984
  type: ClusterIP
  selector:
    app: ${{ defaults.app_name }}-couchdb

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{ defaults.app_name }}
  annotations:
    originImageName: budibase/apps:3.15.0
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    app: ${{ defaults.app_name }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}
    spec:
      automountServiceAccountToken: false
      containers:
        - name: ${{ defaults.app_name }}
          image: budibase/apps:3.15.0
          imagePullPolicy: IfNotPresent
          env:
            - name: BUDIBASE_ENVIRONMENT
              value: PRODUCTION
            - name: DEPLOYMENT_ENVIRONMENT
              value: kubernetes
            - name: SELF_HOSTED
              value: "1"
            - name: PORT
              value: "4002"
            - name: MULTI_TENANCY
              value: "0"
            - name: LOG_LEVEL
              value: info
            - name: ENABLE_ANALYTICS
              value: ${{ inputs.enable_analytics }}
            # CouchDB configuration
            - name: COUCH_DB_URL
              value: http://${{ defaults.app_name }}-couchdb.${{ SEALOS_NAMESPACE }}.svc.cluster.local:5984
            - name: COUCH_DB_SQL_URL
              value: http://${{ defaults.app_name }}-couchdb.${{ SEALOS_NAMESPACE }}.svc.cluster.local:4984
            - name: COUCH_DB_USER
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-couchdb
                  key: adminUsername
            - name: COUCH_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-couchdb
                  key: adminPassword
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-redis-conn-credential
                  key: password
            - name: REDIS_URL
              value: redis://:$(REDIS_PASSWORD)@${{ defaults.app_name }}-redis-redis.${{ SEALOS_NAMESPACE }}.svc.cluster.local:6379
            - name: MINIO_ENABLED
              value: "true"
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: object-storage-key
                  key: accessKey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: object-storage-key
                  key: secretKey
            - name: BACKEND_STORAGE_MINIO_EXTERNAL_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: object-storage-key
                  key: external
            - name: MINIO_URL
              value: https://$(BACKEND_STORAGE_MINIO_EXTERNAL_ENDPOINT)
            - name: PLUGIN_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: object-storage-key-${{ SEALOS_SERVICE_ACCOUNT }}-${{ defaults.app_name }}
                  key: bucket
            - name: APPS_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: object-storage-key-${{ SEALOS_SERVICE_ACCOUNT }}-${{ defaults.app_name }}
                  key: bucket
            - name: GLOBAL_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: object-storage-key-${{ SEALOS_SERVICE_ACCOUNT }}-${{ defaults.app_name }}
                  key: bucket
            - name: BACKUPS_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: object-storage-key-${{ SEALOS_SERVICE_ACCOUNT }}-${{ defaults.app_name }}
                  key: bucket
            # Application secrets
            - name: INTERNAL_API_KEY
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}
                  key: internal_api_key
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}
                  key: jwt_secret
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}
                  key: bb_encryption_key
            - name: API_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}
                  key: api_encryption_key
            - name: WORKER_URL
              value: http://${{ defaults.app_name }}-worker.${{ SEALOS_NAMESPACE }}.svc.cluster.local:4003
            # Admin configuration
            - name: BB_ADMIN_USER_EMAIL
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}
                  key: admin_email
            - name: BB_ADMIN_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}
                  key: admin_password
            ${{ if(inputs.smtp_enabled === 'true') }}
            - name: SMTP_HOST
              value: ${{ inputs.smtp_host }}
            - name: SMTP_PORT
              value: ${{ inputs.smtp_port }}
            - name: SMTP_USER
              value: ${{ inputs.smtp_user }}
            - name: SMTP_PASSWORD
              value: ${{ inputs.smtp_password }}
            - name: SMTP_FROM_ADDRESS
              value: ${{ inputs.smtp_user }}
            ${{ endif() }}
            - name: APP_FEATURES
              value: api
          ports:
            - containerPort: 4002
          resources:
            requests:
              cpu: 20m
              memory: 51Mi
            limits:
              cpu: 200m
              memory: 512Mi
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /health
              port: 4002
              scheme: HTTP
            periodSeconds: 3
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 4002
              scheme: HTTP
            periodSeconds: 30
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /health
              port: 4002
              scheme: HTTP
            periodSeconds: 3

---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  ports:
    - port: 4002
  selector:
    app: ${{ defaults.app_name }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{ defaults.app_name }}-worker
  annotations:
    originImageName: budibase/worker:3.15.0
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}-worker
    app: ${{ defaults.app_name }}-worker
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}-worker
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}-worker
    spec:
      automountServiceAccountToken: false
      containers:
        - name: ${{ defaults.app_name }}-worker
          image: budibase/worker:3.15.0
          imagePullPolicy: IfNotPresent
          env:
            - name: BUDIBASE_ENVIRONMENT
              value: PRODUCTION
            - name: DEPLOYMENT_ENVIRONMENT
              value: kubernetes
            - name: SELF_HOSTED
              value: "1"
            - name: PORT
              value: "4003"
            - name: CLUSTER_PORT
              value: "4003"
            - name: MULTI_TENANCY
              value: "0"
            - name: LOG_LEVEL
              value: info
            - name: ENABLE_ANALYTICS
              value: ${{ inputs.enable_analytics }}
            # CouchDB configuration
            - name: COUCH_DB_URL
              value: http://${{ defaults.app_name }}-couchdb.${{ SEALOS_NAMESPACE }}.svc.cluster.local:5984
            - name: COUCH_DB_SQL_URL
              value: http://${{ defaults.app_name }}-couchdb.${{ SEALOS_NAMESPACE }}.svc.cluster.local:4984
            - name: COUCH_DB_USER
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-couchdb
                  key: adminUsername
            - name: COUCH_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-couchdb
                  key: adminPassword
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-redis-conn-credential
                  key: password
            - name: REDIS_URL
              value: redis://default:$(REDIS_PASSWORD)@${{ defaults.app_name }}-redis-redis.${{ SEALOS_NAMESPACE }}.svc.cluster.local:6379
            - name: MINIO_ENABLED
              value: "true"
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: object-storage-key
                  key: accessKey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: object-storage-key
                  key: secretKey
            - name: BACKEND_STORAGE_MINIO_EXTERNAL_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: object-storage-key
                  key: external
            - name: MINIO_URL
              value: https://$(BACKEND_STORAGE_MINIO_EXTERNAL_ENDPOINT)
            - name: PLUGIN_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: object-storage-key-${{ SEALOS_SERVICE_ACCOUNT }}-${{ defaults.app_name }}
                  key: bucket
            - name: APPS_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: object-storage-key-${{ SEALOS_SERVICE_ACCOUNT }}-${{ defaults.app_name }}
                  key: bucket
            - name: GLOBAL_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: object-storage-key-${{ SEALOS_SERVICE_ACCOUNT }}-${{ defaults.app_name }}
                  key: bucket
            - name: BACKUPS_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: object-storage-key-${{ SEALOS_SERVICE_ACCOUNT }}-${{ defaults.app_name }}
                  key: bucket
            # Application secrets
            - name: INTERNAL_API_KEY
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}
                  key: internal_api_key
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}
                  key: jwt_secret
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}
                  key: bb_encryption_key
            - name: API_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}
                  key: api_encryption_key
            - name: APPS_URL
              value: http://${{ defaults.app_name }}.${{ SEALOS_NAMESPACE }}.svc.cluster.local:4002
            # Admin configuration
            - name: BB_ADMIN_USER_EMAIL
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}
                  key: admin_email
            - name: BB_ADMIN_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}
                  key: admin_password
            ${{ if(inputs.smtp_enabled === 'true') }}
            - name: SMTP_HOST
              value: ${{ inputs.smtp_host }}
            - name: SMTP_PORT
              value: ${{ inputs.smtp_port }}
            - name: SMTP_USER
              value: ${{ inputs.smtp_user }}
            - name: SMTP_PASSWORD
              value: ${{ inputs.smtp_password }}
            - name: SMTP_FROM_ADDRESS
              value: ${{ inputs.smtp_user }}
            ${{ endif() }}
          ports:
            - containerPort: 4003
          resources:
            requests:
              cpu: 20m
              memory: 25Mi
            limits:
              cpu: 200m
              memory: 256Mi
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /health
              port: 4003
              scheme: HTTP
            periodSeconds: 3
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 4003
              scheme: HTTP
            periodSeconds: 30
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /health
              port: 4003
              scheme: HTTP
            periodSeconds: 3

---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}-worker
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}-worker
spec:
  ports:
    - port: 4003
  selector:
    app: ${{ defaults.app_name }}-worker

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{ defaults.app_name }}-proxy
  annotations:
    originImageName: budibase/proxy:3.15.0
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}-proxy
    app: ${{ defaults.app_name }}-proxy
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}-proxy
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}-proxy
    spec:
      automountServiceAccountToken: false
      containers:
        - name: ${{ defaults.app_name }}-proxy
          image: budibase/proxy:3.15.0
          imagePullPolicy: IfNotPresent
          env:
            - name: APPS_UPSTREAM_URL
              value: http://${{ defaults.app_name }}.${{ SEALOS_NAMESPACE }}.svc.cluster.local:4002
            - name: WORKER_UPSTREAM_URL
              value: http://${{ defaults.app_name }}-worker.${{ SEALOS_NAMESPACE }}.svc.cluster.local:4003
            - name: BACKEND_STORAGE_MINIO_EXTERNAL_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: object-storage-key
                  key: external
            - name: MINIO_UPSTREAM_URL
              value: https://$(BACKEND_STORAGE_MINIO_EXTERNAL_ENDPOINT)
            - name: COUCHDB_UPSTREAM_URL
              value: http://${{ defaults.app_name }}-couchdb.${{ SEALOS_NAMESPACE }}.svc.cluster.local:5984
            - name: RESOLVER
              value: kube-dns.kube-system.svc.cluster.local
          ports:
            - containerPort: 10000
          resources:
            requests:
              cpu: 20m
              memory: 25Mi
            limits:
              cpu: 200m
              memory: 256Mi
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /health
              port: 10000
              scheme: HTTP
            periodSeconds: 3
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 10000
              scheme: HTTP
            periodSeconds: 5
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /health
              port: 10000
              scheme: HTTP
            periodSeconds: 3

---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}-proxy
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}-proxy
spec:
  ports:
    - port: 10000
  selector:
    app: ${{ defaults.app_name }}-proxy

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${{ defaults.app_name }}-proxy
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}-proxy
    cloud.sealos.io/app-deploy-manager-domain: ${{ defaults.app_host }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: ${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: ${{ defaults.app_name }}-proxy
                port:
                  number: 10000
  tls:
    - hosts:
        - ${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      secretName: ${{ SEALOS_CERT_SECRET_NAME }}

---
apiVersion: app.sealos.io/v1
kind: App
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  data:
    url: https://${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
  displayType: normal
  icon: "https://raw.githubusercontent.com/Budibase/budibase/master/packages/builder/assets/bb-emblem.svg"
  name: Budibase
  type: link