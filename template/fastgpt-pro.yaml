apiVersion: app.sealos.io/v1
kind: Template
metadata:
  name: fastgpt-pro
spec:
  title: 'FastGpt 商业版'
  url: 'https://fastgpt.run/'
  gitRepo: 'https://github.com/labring/FastGPT'
  author: 'sealos'
  description: 'Fast GPT allows you to use your own openai API KEY to quickly call the openai interface, currently integrating Gpt35, Gpt4 and embedding. You can build your own knowledge base.'
  readme: 'https://raw.githubusercontent.com/labring/FastGPT/main/README.md'
  icon: 'https://avatars.githubusercontent.com/u/50446880?s=96&v=4'
  templateType: inline
  defaults:
    app_name:
      type: string
      value: fastgpt-${{ random(8) }}
    app_host:
      type: string
      value: ${{ random(8) }}
    admin_host:
      type: string
      value: ${{ random(8) }}
    plugin_host:
      type: string
      value: ${{ random(8) }}
    session_secret:
      type: string
      value: ${{ random(8) }}
    root_key:
      type: string
      value: ${{ random(8) }}
  inputs:
    root_password:
      description: 'root用户密码，用户名为: root'
      type: string
      default: ''
      required: true
    base_url:
      description: 'api 基础地址，官方 key 不需要改'
      type: string
      default: 'https://api.openai.com/v1'
      required: true
    api_key:
      description: 'openai api key'
      type: string
      default: ''
      required: true
    license:
      description: '商业版 License'
      type: string
      default: ''
      required: true

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{ defaults.app_name }}
  annotations:
    originImageName: registry.cn-hangzhou.aliyuncs.com/fastgpt/fastgpt:latest
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/deploy-on-sealos: ${{ defaults.app_name }}
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    app: ${{ defaults.app_name }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}
    spec:
      containers:
        - name: ${{ defaults.app_name }}
          image: registry.cn-hangzhou.aliyuncs.com/fastgpt/fastgpt:latest
          env:
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-mongo-conn-credential
                  key: password
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-pg-conn-credential
                  key: password
            - name: DEFAULT_ROOT_PSW
              value: ${{ inputs.root_password }}
            - name: OPENAI_BASE_URL
              value: ${{ inputs.base_url }}
            - name: CHAT_API_KEY
              value: ${{ inputs.api_key }}
            - name: DB_MAX_LINK
              value: '30'
            - name: TOKEN_KEY
              value: ${{ defaults.session_secret }}
            - name: ROOT_KEY
              value: ${{ defaults.root_key }}
            - name: FILE_TOKEN_KEY
              value: filetoken
            - name: MONGODB_URI
              value: >-
                mongodb://root:$(MONGO_PASSWORD)@${{ defaults.app_name }}-mongo-mongodb.${{ SEALOS_NAMESPACE }}.svc:27017/fastgpt?authSource=admin
            - name: PG_URL
              value: >-
                postgresql://postgres:$(PG_PASSWORD)@${{ defaults.app_name }}-pg-postgresql.${{ SEALOS_NAMESPACE }}.svc:5432/postgres
          resources:
            requests:
              cpu: 50m
              memory: 25Mi
            limits:
              cpu: 500m
              memory: 256Mi
          command: []
          args: []
          ports:
            - containerPort: 3000
          imagePullPolicy: Always
          volumeMounts:
            - name: vn-appvn-datavn-configvn-json
              mountPath: /app/data/config.json
              subPath: ./app/data/config.json
      volumes:
        - name: vn-appvn-datavn-configvn-json
          configMap:
            name: ${{ defaults.app_name }}
            items:
              - key: vn-appvn-datavn-configvn-json
                path: ./app/data/config.json

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ${{ defaults.app_name }}
data:
  vn-appvn-datavn-configvn-json: |
    {
      "FeConfig": {
        "show_emptyChat": true,
        "show_register": true,
        "show_appStore": false,
        "show_userDetail": true,
        "show_contact": false,
        "show_git": false,
        "show_doc": false,
        "show_openai_account": false,
        "systemTitle": "FastGPT",
        "authorText": "Made by FastGPT Team.",
        "googleClientVerKey": "",
        "oauth": {
          "github": "",
          "google": ""
        },
        "limit": {
          "exportLimitMinutes": 0
        },
        "scripts": []
      },
      "SystemParams": {
        "pluginBaseUrl": "",
        "openapiPrefix": "openapi",
        "vectorMaxProcess": 15,
        "qaMaxProcess": 15,
        "pgIvfflatProbe": 10
      },
      "ChatModels": [
        {
          "model": "gpt-3.5-turbo",
          "name": "GPT35-4k",
          "contextMaxToken": 4000,
          "quoteMaxToken": 2000,
          "maxTemperature": 1.2,
          "price": 0,
          "defaultSystem": ""
        },
        {
          "model": "gpt-3.5-turbo-16k",
          "name": "GPT35-16k",
          "contextMaxToken": 16000,
          "quoteMaxToken": 8000,
          "maxTemperature": 1.2,
          "price": 0,
          "defaultSystem": ""
        },
        {
          "model": "gpt-4",
          "name": "GPT-4",
          "contextMaxToken": 8000,
          "quoteMaxToken": 4000,
          "maxTemperature": 1.2,
          "price": 0,
          "defaultSystem": ""
        }
      ],
      "VectorModels": [
        {
          "model": "text-embedding-ada-002",
          "name": "Embedding-2",
          "price": 0,
          "defaultToken": 500,
          "maxToken": 3000
        }
      ],
      "QAModel": {
        "model": "gpt-3.5-turbo-16k",
        "name": "GPT35-16k",
        "maxToken": 16000,
        "price": 0
      },
      "ExtractModel": {
        "model": "gpt-3.5-turbo-16k",
        "functionCall": true,
        "name": "FunctionAI-16k",
        "maxToken": 16000,
        "price": 3,
        "prompt": ""
      },
      "CQModel": {
        "model": "gpt-3.5-turbo-16k",
        "functionCall": true,
        "name": "FunctionAI-16k",
        "maxToken": 16000,
        "price": 3,
        "prompt": ""
      }
    }

---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/deploy-on-sealos: ${{ defaults.app_name }}
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  ports:
    - port: 3000
  selector:
    app: ${{ defaults.app_name }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/deploy-on-sealos: ${{ defaults.app_name }}
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    cloud.sealos.io/app-deploy-manager-domain: ${{ defaults.app_host }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: ${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      http:
        paths:
          - pathType: Prefix
            path: /()(.*)
            backend:
              service:
                name: ${{ defaults.app_name }}
                port:
                  number: 3000
  tls:
    - hosts:
        - ${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      secretName: ${{ SEALOS_CERT_SECRET_NAME }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{ defaults.app_name }}-admin
  annotations:
    originImageName: registry.cn-hangzhou.aliyuncs.com/fastgpt/fastgptadmin:latest
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}-admin
    app: ${{ defaults.app_name }}-admin
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}-admin
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}-admin
    spec:
      containers:
        - name: ${{ defaults.app_name }}-admin
          image: registry.cn-hangzhou.aliyuncs.com/fastgpt/fastgptadmin:latest
          env:
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-mongo-conn-credential
                  key: password
            - name: MONGODB_URI
              value: >-
                mongodb://root:$(MONGO_PASSWORD)@${{ defaults.app_name }}-mongo-mongodb.${{ SEALOS_NAMESPACE }}.svc:27017?authSource=admin
            - name: MONGODB_NAME
              value: fastgpt
            - name: ADMIN_USER
              value: root
            - name: ADMIN_PASS
              value: rootpsw
            - name: ADMIN_SECRET
              value: secret
            - name: LICENSE
              value: ${{ inputs.license }}
          resources:
            requests:
              cpu: 10m
              memory: 12Mi
            limits:
              cpu: 100m
              memory: 128Mi
          command: []
          args: []
          ports:
            - containerPort: 3001
          imagePullPolicy: Always
          volumeMounts: []
      volumes: []

---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}-admin
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}-admin
spec:
  ports:
    - port: 3001
  selector:
    app: ${{ defaults.app_name }}-admin

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${{ defaults.app_name }}-admin
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}-admin
    cloud.sealos.io/app-deploy-manager-domain: ${{ defaults.admin_host }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: ${{ defaults.admin_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      http:
        paths:
          - pathType: Prefix
            path: /()(.*)
            backend:
              service:
                name: ${{ defaults.app_name }}-admin
                port:
                  number: 3001
  tls:
    - hosts:
        - ${{ defaults.admin_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      secretName: ${{ SEALOS_CERT_SECRET_NAME }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{ defaults.app_name }}-plugin
  annotations:
    originImageName: registry.cn-hangzhou.aliyuncs.com/fastgpt/fastgptpro:latest
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}-plugin
    app: ${{ defaults.app_name }}-plugin
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}-plugin
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}-plugin
    spec:
      containers:
        - name: ${{ defaults.app_name }}-plugin
          image: registry.cn-hangzhou.aliyuncs.com/fastgpt/fastgptpro:latest
          env:
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-mongo-conn-credential
                  key: password
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-pg-conn-credential
                  key: password
            - name: DB_MAX_LINK
              value: '10'
            - name: TOKEN_KEY
              value: ${{ defaults.session_secret }}
            - name: ROOT_KEY
              value: ${{ defaults.root_key }}
            - name: MONGODB_URI
              value: >-
                mongodb://root:$(MONGO_PASSWORD)@${{ defaults.app_name }}-mongo-mongodb.${{ SEALOS_NAMESPACE }}.svc:27017/fastgpt?authSource=admin
            - name: PG_URL
              value: >-
                postgresql://postgres:$(PG_PASSWORD)@${{ defaults.app_name }}-pg-postgresql.${{ SEALOS_NAMESPACE }}.svc:5432/postgres
          resources:
            requests:
              cpu: 50m
              memory: 51Mi
            limits:
              cpu: 500m
              memory: 512Mi
          command: []
          args: []
          ports:
            - containerPort: 3000
          imagePullPolicy: Always
          volumeMounts:
            - name: vn-appvn-datavn-configvn-json
              mountPath: /app/data/config.json
              subPath: ./app/data/config.json
      volumes:
        - name: vn-appvn-datavn-configvn-json
          configMap:
            name: ${{ defaults.app_name }}-plugin
            items:
              - key: vn-appvn-datavn-configvn-json
                path: ./app/data/config.json

---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}-plugin
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}-plugin
spec:
  ports:
    - port: 3000
  selector:
    app: ${{ defaults.app_name }}-plugin

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${{ defaults.app_name }}-plugin
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}-plugin
    cloud.sealos.io/app-deploy-manager-domain: ${{ defaults.plugin_host }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: ${{ defaults.plugin_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      http:
        paths:
          - pathType: Prefix
            path: /()(.*)
            backend:
              service:
                name: ${{ defaults.app_name }}-plugin
                port:
                  number: 3000
  tls:
    - hosts:
        - ${{ defaults.plugin_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      secretName: ${{ SEALOS_CERT_SECRET_NAME }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ${{ defaults.app_name }}-plugin
data:
  vn-appvn-datavn-configvn-json: |
    {
      "license": ${{ inputs.license }},
      "system": {
        "title": ""
      },
      "censor": {
        "BAIDU_TEXT_CENSOR_CLIENTID": "",
        "BAIDU_TEXT_CENSOR_CLIENTSECRET": ""
      },
      "auth": {
        "googleServiceVerKey": "",
        "github": {
          "clientId": "",
          "secret": ""
        },
        "google": {
          "clientId": "",
          "secret": ""
        },
        "email": {
          "service": "qq",
          "user": "",
          "pass": ""
        },
        "phone": {
          "SNED_PHONE_ACCESSKEYID": "",
          "SNED_PHONE_ACCESSSECRET": "",
          "SNED_PHONE_SIGNNAME": "",
          "SNED_PHONE_TEMPLATE": ""
        }
      },
      "pay": {
        "wx": {
          "WX_APPID": "",
          "WX_MCHID": "",
          "WX_V3_CODE": "",
          "WX_NOTIFY_URL": "",
          "WX_SERIAL_NO": "",
          "WX_PRIVATE_KEY": ""
        }
      }
    }

---
apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  finalizers:
    - cluster.kubeblocks.io/finalizer
  labels:
    clusterdefinition.kubeblocks.io/name: mongodb
    clusterversion.kubeblocks.io/name: mongodb-5.0.14
    sealos-db-provider-cr: ${{ defaults.app_name }}-mongo
    cloud.sealos.io/deploy-on-sealos: ${{ defaults.app_name }}
  annotations: {}
  name: ${{ defaults.app_name }}-mongo
  generation: 1
spec:
  affinity:
    nodeLabels: {}
    podAntiAffinity: Preferred
    tenancy: SharedNode
    topologyKeys: []
  clusterDefinitionRef: mongodb
  clusterVersionRef: mongodb-5.0.14
  componentSpecs:
    - componentDefRef: mongodb
      monitor: true
      name: mongodb
      replicas: 1
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 51Mi
      serviceAccountName: ${{ defaults.app_name }}-mongo
      volumeClaimTemplates:
        - name: data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 3Gi
            storageClassName: openebs-backup
  terminationPolicy: Delete
  tolerations: []

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    sealos-db-provider-cr: ${{ defaults.app_name }}-mongo
    app.kubernetes.io/instance: ${{ defaults.app_name }}-mongo
    app.kubernetes.io/managed-by: kbcli
    cloud.sealos.io/deploy-on-sealos: ${{ defaults.app_name }}
  name: ${{ defaults.app_name }}-mongo

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    sealos-db-provider-cr: ${{ defaults.app_name }}-mongo
    app.kubernetes.io/instance: ${{ defaults.app_name }}-mongo
    app.kubernetes.io/managed-by: kbcli
    cloud.sealos.io/deploy-on-sealos: ${{ defaults.app_name }}
  name: ${{ defaults.app_name }}-mongo
rules:
  - apiGroups:
      - ''
    resources:
      - events
    verbs:
      - create

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    sealos-db-provider-cr: ${{ defaults.app_name }}-mongo
    app.kubernetes.io/instance: ${{ defaults.app_name }}-mongo
    app.kubernetes.io/managed-by: kbcli
    cloud.sealos.io/deploy-on-sealos: ${{ defaults.app_name }}
  name: ${{ defaults.app_name }}-mongo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ${{ defaults.app_name }}-mongo
subjects:
  - kind: ServiceAccount
    name: ${{ defaults.app_name }}-mongo
    namespace: ${{ SEALOS_NAMESPACE}}

---
apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  finalizers:
    - cluster.kubeblocks.io/finalizer
  labels:
    clusterdefinition.kubeblocks.io/name: postgresql
    clusterversion.kubeblocks.io/name: postgresql-14.8.0
    sealos-db-provider-cr: ${{ defaults.app_name }}-pg
    cloud.sealos.io/deploy-on-sealos: ${{ defaults.app_name }}
  annotations: {}
  name: ${{ defaults.app_name }}-pg
spec:
  affinity:
    nodeLabels: {}
    podAntiAffinity: Preferred
    tenancy: SharedNode
    topologyKeys: []
  clusterDefinitionRef: postgresql
  clusterVersionRef: postgresql-14.8.0
  componentSpecs:
    - componentDefRef: postgresql
      monitor: true
      name: postgresql
      replicas: 1
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 51Mi
      serviceAccountName: ${{ defaults.app_name }}-pg
      switchPolicy:
        type: Noop
      volumeClaimTemplates:
        - name: data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 3Gi
            storageClassName: openebs-backup
  terminationPolicy: Delete
  tolerations: []

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    sealos-db-provider-cr: ${{ defaults.app_name }}-pg
    app.kubernetes.io/instance: ${{ defaults.app_name }}-pg
    app.kubernetes.io/managed-by: kbcli
    cloud.sealos.io/deploy-on-sealos: ${{ defaults.app_name }}
  name: ${{ defaults.app_name }}-pg

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    sealos-db-provider-cr: ${{ defaults.app_name }}-pg
    app.kubernetes.io/instance: ${{ defaults.app_name }}-pg
    app.kubernetes.io/managed-by: kbcli
    cloud.sealos.io/deploy-on-sealos: ${{ defaults.app_name }}
  name: ${{ defaults.app_name }}-pg
rules:
  - apiGroups:
      - ''
    resources:
      - events
    verbs:
      - create
  - apiGroups:
      - ''
    resources:
      - configmaps
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
      - delete
  - apiGroups:
      - ''
    resources:
      - endpoints
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
      - delete
  - apiGroups:
      - ''
    resources:
      - pods
    verbs:
      - get
      - list
      - patch
      - update
      - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    sealos-db-provider-cr: ${{ defaults.app_name }}-pg
    app.kubernetes.io/instance: ${{ defaults.app_name }}-pg
    app.kubernetes.io/managed-by: kbcli
    cloud.sealos.io/deploy-on-sealos: ${{ defaults.app_name }}
  name: ${{ defaults.app_name }}-pg
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ${{ defaults.app_name }}-pg
subjects:
  - kind: ServiceAccount
    name: ${{ defaults.app_name }}-pg
    namespace: ${{ SEALOS_NAMESPACE }}
