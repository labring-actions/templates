apiVersion: app.sealos.io/v1
kind: Template
metadata:
  name: refly
spec:
  title: 'Refly'
  url: 'https://refly.ai/'
  gitRepo: 'https://github.com/refly-ai/refly'
  author: 'Sealos'
  description: 'Refly is an open-source AI-native creation engine powered by 13+ leading AI models.'
  readme: 'https://raw.githubusercontent.com/refly-ai/refly/refs/heads/main/README.md'
  icon: 'https://avatars.githubusercontent.com/u/132635806?s=48&v=4'
  templateType: inline
  locale: en
  i18n:
    zh:
      description: 'refly 是一款开源的 AI Native 创作引擎，由多线程对话、代码组件、知识库集成、上下文记忆和智能搜索驱动，Refly 是将创意转化为优质内容的最佳方式。'
      readme: 'https://raw.githubusercontent.com/refly-ai/refly/refs/heads/main/README_CN.md'
  categories:
    - tool
  defaults:
    app_host:
      # number or string..
      type: string
      value: refly-${{ random(8) }}
    app_name:
      type: string
      value: refly-${{ random(8) }}
  inputs:
    OPENAI_API_KEY:
      # A description of the input field, explaining that it is for the user's OpenAI API key.
      description: 'OpenAI API Key'
      # Specifies the input type as a string.
      type: string
      # Sets an empty string as the default value for the API key.
      default: ''
      # Marks this input as mandatory, meaning the user must provide a value for deployment.
      required: true
    OPENAI_BASE_URL:
      # A description of the input field, indicating it is for the base URL of the OpenAI API endpoint.
      description: 'OpenAI endpoint base URL'
      # Specifies the input type as a string.
      type: string
      # Provides a default value for the base URL, pointing to the standard OpenAI API endpoint.
      default: 'https://api.openai.com/v1'
      # Marks this input as optional, allowing deployment without a custom value.
      required: true
    EMBEDDINGS_MODEL_NAME:
      description: 'The embedding model name to use, e.g., text-embedding-ada-002'
      type: string
      default: 'text-embedding-ada-002'
      required: true

---
apiVersion: objectstorage.sealos.io/v1
kind: ObjectStorageBucket
metadata:
  name: ${{ defaults.app_name }}-private
spec:
  policy: private

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    sealos-db-provider-cr: ${{ defaults.app_name }}-pg
    app.kubernetes.io/instance: ${{ defaults.app_name }}-pg
    app.kubernetes.io/managed-by: kbcli
  name: ${{ defaults.app_name }}-pg

---
apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  finalizers:
    - cluster.kubeblocks.io/finalizer
  labels:
    clusterdefinition.kubeblocks.io/name: postgresql
    clusterversion.kubeblocks.io/name: postgresql-14.8.0
    sealos-db-provider-cr: ${{ defaults.app_name }}-pg
  annotations: {}
  name: ${{ defaults.app_name }}-pg
spec:
  affinity:
    nodeLabels: {}
    podAntiAffinity: Preferred
    tenancy: SharedNode
    topologyKeys: []
  clusterDefinitionRef: postgresql
  clusterVersionRef: postgresql-14.8.0
  componentSpecs:
    - componentDefRef: postgresql
      monitor: true
      name: postgresql
      replicas: 1
      resources:
        limits:
          cpu: 1000m
          memory: 1024Mi
        requests:
          cpu: 100m
          memory: 102Mi
      serviceAccountName: ${{ defaults.app_name }}-pg
      switchPolicy:
        type: Noop
      volumeClaimTemplates:
        - name: data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 3Gi

  terminationPolicy: Delete
  tolerations: []

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    sealos-db-provider-cr: ${{ defaults.app_name }}-pg
    app.kubernetes.io/instance: ${{ defaults.app_name }}-pg
    app.kubernetes.io/managed-by: kbcli
  name: ${{ defaults.app_name }}-pg
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    sealos-db-provider-cr: ${{ defaults.app_name }}-pg
    app.kubernetes.io/instance: ${{ defaults.app_name }}-pg
    app.kubernetes.io/managed-by: kbcli
  name: ${{ defaults.app_name }}-pg
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ${{ defaults.app_name }}-pg
subjects:
  - kind: ServiceAccount
    name: ${{ defaults.app_name }}-pg

---
apiVersion: batch/v1
kind: Job
metadata:
  name: ${{ defaults.app_name }}-pg-init
spec:
  completions: 1
  template:
    spec:
      containers:
        - name: pgsql-init
          image: senzing/postgresql-client:2.2.4
          env:
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-pg-conn-credential
                  key: password
            - name: DATABASE_URL
              value: postgresql://postgres:$(PG_PASSWORD)@${{ defaults.app_name }}-pg-postgresql.${{ SEALOS_NAMESPACE }}.svc:5432
          command:
            - /bin/sh
            - -c
            - |
              until psql ${DATABASE_URL} -c 'CREATE DATABASE refly;' &>/dev/null; do sleep 1; done
      restartPolicy: Never
  backoffLimit: 0
  ttlSecondsAfterFinished: 300

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    sealos-db-provider-cr: ${{ defaults.app_name }}-redis
    app.kubernetes.io/instance: ${{ defaults.app_name }}-redis
    app.kubernetes.io/managed-by: kbcli
  name: ${{ defaults.app_name }}-redis

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    sealos-db-provider-cr: ${{ defaults.app_name }}-redis
    app.kubernetes.io/instance: ${{ defaults.app_name }}-redis
    app.kubernetes.io/managed-by: kbcli
  name: ${{ defaults.app_name }}-redis
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    sealos-db-provider-cr: ${{ defaults.app_name }}-redis
    app.kubernetes.io/instance: ${{ defaults.app_name }}-redis
    app.kubernetes.io/managed-by: kbcli
  name: ${{ defaults.app_name }}-redis
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ${{ defaults.app_name }}-redis
subjects:
  - kind: ServiceAccount
    name: ${{ defaults.app_name }}-redis
    namespace: ${{ SEALOS_NAMESPACE }}

---
apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  finalizers:
    - cluster.kubeblocks.io/finalizer
  labels:
    clusterdefinition.kubeblocks.io/name: redis
    clusterversion.kubeblocks.io/name: redis-7.0.6
    sealos-db-provider-cr: ${{ defaults.app_name }}-redis
  annotations: {}
  name: ${{ defaults.app_name }}-redis
spec:
  affinity:
    nodeLabels: {}
    podAntiAffinity: Preferred
    tenancy: SharedNode
    topologyKeys: []
  clusterDefinitionRef: redis
  clusterVersionRef: redis-7.0.6
  componentSpecs:
    - componentDefRef: redis
      monitor: true
      name: redis
      replicas: 1
      resources:
        limits:
          cpu: 1000m
          memory: 1024Mi
        requests:
          cpu: 100m
          memory: 102Mi
      serviceAccountName: ${{ defaults.app_name }}-redis
      switchPolicy:
        type: Noop
      volumeClaimTemplates:
        - name: data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 3Gi

    - componentDefRef: redis-sentinel
      monitor: true
      name: redis-sentinel
      replicas: 1
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 100m
          memory: 100Mi
      serviceAccountName: ${{ defaults.app_name }}-redis
  terminationPolicy: Delete
  tolerations: []

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ${{ defaults.app_name }}-qdrant
  annotations:
    originImageName: reflyai/qdrant:v1.13.1
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}-qdrant
    app: ${{ defaults.app_name }}-qdrant
spec:
  replicas: 1
  revisionHistoryLimit: 1
  minReadySeconds: 10
  serviceName: ${{ defaults.app_name }}-qdrant
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}-qdrant
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}-qdrant
    spec:
      terminationGracePeriodSeconds: 10
      automountServiceAccountToken: false
      containers:
        - name: ${{ defaults.app_name }}-qdrant
          image: reflyai/qdrant:v1.13.1
          resources:
            requests:
              cpu: 10m
              memory: 12Mi
            limits:
              cpu: 100m
              memory: 128Mi
          imagePullPolicy: IfNotPresent
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - curl -s http://localhost:6333/healthz | grep -q 'healthz check passed'
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
          volumeMounts:
            - name: vn-qdrantvn-storage
              mountPath: /qdrant/storage
  volumeClaimTemplates:
    - metadata:
        annotations:
          path: /qdrant/storage
          value: '1'
        name: vn-qdrantvn-storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}-qdrant
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}-qdrant
spec:
  ports:
    - name: http
      targetPort: 6333
      port: 6333
    - name: admin
      targetPort: 6334
      port: 6334
  selector:
    app: ${{ defaults.app_name }}-qdrant

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ${{ defaults.app_name }}-elasticsearch
  annotations:
    originImageName: reflyai/elasticsearch:7.10.2
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}-elasticsearch
    app: ${{ defaults.app_name }}-elasticsearch
spec:
  replicas: 1
  revisionHistoryLimit: 1
  minReadySeconds: 10
  serviceName: ${{ defaults.app_name }}-elasticsearch
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}-elasticsearch
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}-elasticsearch
    spec:
      terminationGracePeriodSeconds: 10
      automountServiceAccountToken: false
      initContainers:
        - name: take-data-dir-ownership
          image: mautic/mautic:5.2.3-fpm
          command: ["/bin/sh", "-c", "chown -R 1000:0 /usr/share/elasticsearch/data"]
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: vn-usrvn-sharevn-elasticsearchvn-data
              mountPath: /usr/share/elasticsearch/data
      containers:
        - name: ${{ defaults.app_name }}-elasticsearch
          image: reflyai/elasticsearch:7.10.2
          env:
            - name: discovery.type
              value: single-node
            - name: xpack.security.enabled
              value: false
          resources:
            requests:
              cpu: 100m
              memory: 204Mi
            limits:
              cpu: 1000m
              memory: 2048Mi
          ports:
            - name: http
              protocol: TCP
              containerPort: 9200
          imagePullPolicy: IfNotPresent
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - curl -s http://localhost:9200 >/dev/null
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
          volumeMounts:
            - name: vn-usrvn-sharevn-elasticsearchvn-data
              mountPath: /usr/share/elasticsearch/data
  volumeClaimTemplates:
    - metadata:
        annotations:
          path: /usr/share/elasticsearch/data
          value: '1'
        name: vn-usrvn-sharevn-elasticsearchvn-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}-elasticsearch
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}-elasticsearch
spec:
  ports:
    - port: 9200
  selector:
    app: ${{ defaults.app_name }}-elasticsearch

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{ defaults.app_name }}-api
  annotations:
    originImageName: reflyai/refly-api:8d870210470801f62a4d2adb3423c947afddf400
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}-api
    app: ${{ defaults.app_name }}-api
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}-api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}-api
    spec:
      automountServiceAccountToken: false
      containers:
        - name: ${{ defaults.app_name }}-api
          image: reflyai/refly-api:8d870210470801f62a4d2adb3423c947afddf400
          env:
            - name: MINIO_INTERNAL_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: object-storage-key
                  key: accessKey
            - name: MINIO_INTERNAL_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: object-storage-key
                  key: secretKey
            - name: MINIO_INTERNAL_BUCKET
              valueFrom:
                secretKeyRef:
                  name: object-storage-key-${{ SEALOS_SERVICE_ACCOUNT }}-${{ defaults.app_name }}-private
                  key: bucket
            - name: MINIO_INTERNAL_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: object-storage-key
                  key: internal
            - name: MINIO_INTERNAL_PORT
              value: 80
            - name: MINIO_INTERNAL_USE_SSL
              value: false
            - name: MINIO_EXTERNAL_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: object-storage-key
                  key: external
            - name: MINIO_EXTERNAL_PORT
              value: 443
            - name: MINIO_EXTERNAL_USE_SSL
              value: true
            - name: MINIO_EXTERNAL_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: object-storage-key
                  key: accessKey
            - name: MINIO_EXTERNAL_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: object-storage-key
                  key: secretKey
            - name: MINIO_EXTERNAL_BUCKET
              valueFrom:
                secretKeyRef:
                  name: object-storage-key-${{ SEALOS_SERVICE_ACCOUNT }}-${{ defaults.app_name }}-private
                  key: bucket
            - name: DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-pg-conn-credential
                  key: port
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-pg-conn-credential
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-pg-conn-credential
                  key: password
            - name: DATABASE_URL
              value: "postgresql://$(DATABASE_USER):$(DATABASE_PASSWORD)@${{ defaults.app_name }}-pg-postgresql.${{ SEALOS_NAMESPACE }}.svc:$(DATABASE_PORT)/refly?schema=refly"
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-redis-conn-credential
                  key: host
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-redis-conn-credential
                  key: port
            - name: REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-redis-conn-credential
                  key: username
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${{ defaults.app_name }}-redis-conn-credential
                  key: password
            - name: QDRANT_HOST
              value: ${{ defaults.app_name }}-qdrant
            - name: ELASTICSEARCH_URL
              value: http://${{ defaults.app_name }}-elasticsearch:9200
            - name: STATIC_PUBLIC_ENDPOINT
              value: /api/v1/misc/public
            - name: STATIC_PRIVATE_ENDPOINT
              value: /api/v1/misc
            - name: EMBEDDINGS_PROVIDER
              value: openai
            - name: EMBEDDINGS_MODEL_NAME
              value: ${{ inputs.EMBEDDINGS_MODEL_NAME }}
            - name: OPENAI_BASE_URL
              value: ${{ inputs.OPENAI_BASE_URL }}
            - name: OPENAI_API_KEY
              value: ${{ inputs.OPENAI_API_KEY }}
            - name: AUTH_SKIP_VERIFICATION
              value: 'true'
            - name: REFLY_COOKIE_DOMAIN
            - name: REFLY_COOKIE_SECURE
            - name: REFLY_COOKIE_SAME_SITE
            - name: LOGIN_REDIRECT_URL
            - name: JWT_SECRET
            - name: JWT_EXPIRATION_TIME
            - name: JWT_REFRESH_EXPIRATION_TIME
            - name: PARSER_PDF
              value: pdfjs
            - name: PARSER_PDF
              value: marker
            - name: MARKER_API_KEY
            - name: COLLAB_TOKEN_EXPIRY
            - name: EMAIL_AUTH_ENABLED
              value: 'true'
            - name: EMAIL_SENDER
            - name: RESEND_API_KEY
              value: re_123
            - name: GITHUB_AUTH_ENABLED
              value: 'false'
            - name: GITHUB_CLIENT_ID
            - name: GITHUB_CLIENT_SECRET
            - name: GITHUB_CALLBACK_URL
            - name: GOOGLE_AUTH_ENABLED
              value: 'false'
            - name: GOOGLE_CLIENT_ID
            - name: GOOGLE_CLIENT_SECRET
            - name: GOOGLE_CALLBACK_URL
            - name: EMBEDDINGS_DIMENSIONS
              value: '768'
            - name: EMBEDDINGS_BATCH_SIZE
              value: '512'
            - name: RERANKER_TOP_N
              value: '10'
            - name: RERANKER_MODEL
              value: jina-reranker-v2-base-multilingual
            - name: RERANKER_RELEVANCE_THRESHOLD
              value: '0.5'
            - name: SKILL_IDLE_TIMEOUT
              value: '60000'
            - name: SKILL_EXECUTION_TIMEOUT
              value: '180000'
            - name: STRIPE_API_KEY
            - name: STRIPE_ACCOUNT_WEBHOOK_SECRET
              value: test
            - name: STRIPE_ACCOUNT_TEST_WEBHOOK_SECRET
              value: test
            - name: STRIPE_SESSION_SUCCESS_URL
            - name: STRIPE_SESSION_CANCEL_URL
            - name: STRIPE_PORTAL_RETURN_URL
            - name: QUOTA_T1_TOKEN
              value: '-1'
            - name: QUOTA_T2_TOKEN
              value: '-1'
            - name: QUOTA_T1_REQUEST
              value: '-1'
            - name: QUOTA_T2_REQUEST
              value: '-1'
            - name: QUOTA_STORAGE_FILE
              value: '-1'
            - name: QUOTA_STORAGE_OBJECT
              value: '-1'
            - name: QUOTA_STORAGE_VECTOR
              value: '-1'
            - name: QUOTA_FILE_PARSE_PAGE
              value: '-1'
          resources:
            requests:
              cpu: 20m
              memory: 51Mi
            limits:
              cpu: 200m
              memory: 512Mi
          command:
            - sh
            - '-c'
          args:
            - >-
              cd /app/apps/api/dist && node scripts/sync-db-schema.js && node main.js
          ports:
            - name: http
              protocol: TCP
              containerPort: 5800
            - name: admin
              protocol: TCP
              containerPort: 5801
          imagePullPolicy: IfNotPresent
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /
              port: 5800
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3

---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}-api
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}-api
spec:
  ports:
    - name: http
      targetPort: 5800
      port: 5800
    - name: admin
      targetPort: 5801
      port: 5801
  selector:
    app: ${{ defaults.app_name }}-api

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ${{ defaults.app_name }}
data:
  vn-etcvn-nginxvn-confvn-dvn-defaultvn-conf: |-
    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;
        
        # API proxy
        location /api/ {
            proxy_pass http://${{ defaults.app_name }}-api:5800/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_read_timeout 1800;
            proxy_connect_timeout 1800;
        }
    
        # Collab proxy
        location /collab {
            proxy_pass http://${{ defaults.app_name }}-api:5801/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_read_timeout 1800;
            proxy_connect_timeout 1800;
        }
    
        # Static files
        location / {
            try_files $uri $uri/ /index.html;
            expires 1h;
            add_header Cache-Control "public, no-transform";
            
            # Cache static files
            location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg)$ {
                expires 7d;
                add_header Cache-Control "public, no-transform";
            }
        }
    
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'" always;
        
        # Additional security
        server_tokens off;
    
        # Basic settings
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 100M;
        
        # Buffer size for POST submissions
        client_body_buffer_size 10K;
        client_header_buffer_size 1k;
        
        # Timeouts
        client_body_timeout 12;
        client_header_timeout 12;
        send_timeout 10;
    
        # Compression
        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;
        gzip_disable "msie6";
    
        # File cache settings
        open_file_cache max=1000 inactive=20s;
        open_file_cache_valid 30s;
        open_file_cache_min_uses 2;
        open_file_cache_errors on;
    } 

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{ defaults.app_name }}
  annotations:
    originImageName: reflyai/refly-web:8d870210470801f62a4d2adb3423c947afddf400
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    app: ${{ defaults.app_name }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}
    spec:
      automountServiceAccountToken: false
      containers:
        - name: ${{ defaults.app_name }}
          image: reflyai/refly-web:8d870210470801f62a4d2adb3423c947afddf400
          env:
            - name: API_URL
              value: '/api'
            - name: COLLAB_URL
              value: '/collab'
            - name: STATIC_PUBLIC_ENDPOINT
              value: '/api/v1/misc/public'
            - name: STATIC_PRIVATE_ENDPOINT
              value: '/api/v1/misc'
          resources:
            requests:
              cpu: 20m
              memory: 12Mi
            limits:
              cpu: 200m
              memory: 128Mi
          ports:
            - name: http
              protocol: TCP
              containerPort: 80
          imagePullPolicy: IfNotPresent
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
          volumeMounts:
            - name: vn-etcvn-nginxvn-confvn-dvn-defaultvn-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: ./etc/nginx/conf.d/default.conf
      volumes:
        - name: vn-etcvn-nginxvn-confvn-dvn-defaultvn-conf
          configMap:
            name: ${{ defaults.app_name }}
            items:
              - key: vn-etcvn-nginxvn-confvn-dvn-defaultvn-conf
                path: ./etc/nginx/conf.d/default.conf

---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  ports:
    - name: http
      targetPort: 80
      port: 80
  selector:
    app: ${{ defaults.app_name }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
    cloud.sealos.io/app-deploy-manager-domain: ${{ defaults.app_host }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: ${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: ${{ defaults.app_name }}
                port:
                  number: 80
  tls:
    - hosts:
        - ${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      secretName: ${{ SEALOS_CERT_SECRET_NAME }}

---
apiVersion: app.sealos.io/v1
kind: App
metadata:
  name: ${{ defaults.app_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: ${{ defaults.app_name }}
spec:
  data:
    url: https://${{ defaults.app_host }}.${{ SEALOS_CLOUD_DOMAIN }}
  displayType: normal
  icon: "https://avatars.githubusercontent.com/u/132635806?s=48&v=4"
  name: "Refly"
  type: link